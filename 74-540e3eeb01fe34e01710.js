(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{2253:function(e,t){e.exports='<table style="display: table; margin-bottom: 1.25rem"><thead><tr style="line-height: 1.5"><th style="width: 10%">Prop Name</th><th style="width: 25%">Type</th><th style="width: 10%">Is Required</th><th style="width: 10%">Default Value</th><th style="width: 45%">Description</th></tr></thead><tbody><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">children</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The dropdown menu options.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">defaultValue</td><td style="padding-bottom: 1.8rem">union</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The default selected value. Can be a string, number, or array of strings/numbers.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">disabled</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the select is disabled.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">dropdownAttrs</td><td style="padding-bottom: 1.8rem">object</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Additional attributes to spread onto the dropdown. ( Style, ClassNames, etc.. )</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isIncomplete</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the select displays as Incomplete. Use when no value has been provided. <em>(usage note: <code style="white-space: pre-wrap">required</code> must also be set)</em>.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isInvalid</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the select displays as Invalid. Use when value does not meet validation pattern.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isTouchAccessible</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Ensure accessibility on touch devices. Will render the dropdown menu in\nnormal DOM flow with position absolute. By default, the menu renders in a\nportal, which is inaccessible on touch devices.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">maxHeight</td><td style="padding-bottom: 1.8rem">number</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">The max height of the dropdown.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">noResultContent</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Content to display when no results are found.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onBlur</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">Callback function triggered when the select loses focus. function(event)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onChange</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function triggered when the value changes. function(value)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onClick</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">Callback function triggered when the select is clicked. function(event)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onDeselect</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function triggered when an option is deselected. function(value)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onFocus</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">Callback function triggered when the select receives focus. function(event)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onSearch</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function triggered when the search criteria changes. function(searchValue)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onSelect</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function triggered when an option is selected. function(value)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">optionFilter</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function invoked for each option on search change. function(searchValue, option)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">placeholder</td><td style="padding-bottom: 1.8rem">string</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Placeholder text.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">required</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the field is required.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">value</td><td style="padding-bottom: 1.8rem">union</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The selected value. Can be a string, number, or array of strings/numbers.</td></tr></tbody></table>'},2254:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Frame from './multiple/Frame';\nimport Option from './shared/_Option';\nimport OptGroup from './shared/_OptGroup';\nimport Tag from './shared/_Tag';\nimport SelectUtil from './shared/_SelectUtil';\n\nconst propTypes = {\n  /**\n   * The dropdown menu options.\n   */\n  children: PropTypes.node,\n  /**\n   * The default selected value. Can be a string, number, or array of strings/numbers.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n  /**\n   * Whether the select is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Additional attributes to spread onto the dropdown. ( Style, ClassNames, etc.. )\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  dropdownAttrs: PropTypes.object,\n  /**\n   * @private\n   * The intl object containing translations. This is retrieved from the context automatically by injectIntl.\n   */\n  intl: intlShape.isRequired,\n  /**\n   * Whether the select displays as Incomplete. Use when no value has been provided. _(usage note: `required` must also be set)_.\n   */\n  isIncomplete: PropTypes.bool,\n  /**\n   * Whether the select displays as Invalid. Use when value does not meet validation pattern.\n   */\n  isInvalid: PropTypes.bool,\n  /**\n   * Ensure accessibility on touch devices. Will render the dropdown menu in\n   * normal DOM flow with position absolute. By default, the menu renders in a\n   * portal, which is inaccessible on touch devices.\n   */\n  isTouchAccessible: PropTypes.bool,\n  /**\n   * The max height of the dropdown.\n   */\n  maxHeight: PropTypes.number,\n  /**\n   * @private The maximum number of options that can be selected. A value less than 2 will be ignored.\n   */\n  maxSelectionCount: PropTypes.number,\n  /**\n   * Content to display when no results are found.\n   */\n  noResultContent: PropTypes.node,\n  /**\n   * Callback function triggered when the select loses focus. function(event)\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback function triggered when the value changes. function(value)\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback function triggered when the select is clicked. function(event)\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback function triggered when an option is deselected. function(value)\n   */\n  onDeselect: PropTypes.func,\n  /**\n   * Callback function triggered when the select receives focus. function(event)\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback function triggered when the search criteria changes. function(searchValue)\n   */\n  onSearch: PropTypes.func,\n  /**\n   * Callback function triggered when an option is selected. function(value)\n   */\n  onSelect: PropTypes.func,\n  /**\n   * Callback function invoked for each option on search change. function(searchValue, option)\n   */\n  optionFilter: PropTypes.func,\n  /**\n   * Placeholder text.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Whether the field is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The selected value. Can be a string, number, or array of strings/numbers.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array]),\n};\n\nconst defaultProps = {\n  children: undefined,\n  defaultValue: undefined,\n  disabled: false,\n  dropdownAttrs: undefined,\n  isIncomplete: false,\n  isInvalid: false,\n  isTouchAccessible: false,\n  maxSelectionCount: undefined,\n  noResultContent: undefined,\n  onChange: undefined,\n  onDeselect: undefined,\n  onSearch: undefined,\n  onSelect: undefined,\n  optionFilter: undefined,\n  placeholder: undefined,\n  required: false,\n  value: undefined,\n};\n\nclass MultiSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { value, defaultValue } = props;\n\n    this.state = {\n      value: SelectUtil.defaultValue({ defaultValue, value, multiple: true }),\n    };\n\n    this.display = this.display.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDeselect = this.handleDeselect.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  /**\n   * Returns the appropriate variant display\n   */\n  display() {\n    const selectValue = SelectUtil.value(this.props, this.state);\n\n    return selectValue.map(tag => (\n      <Tag value={tag} key={tag} onDeselect={this.handleDeselect}>\n        {SelectUtil.valueDisplay(this.props, tag)}\n      </Tag>\n    ));\n  }\n\n  /**\n   * Communicates changes to the value.\n   * @param {array|number|string} value - The value resulting from a change.\n   */\n  handleChange(value) {\n    if (this.props.value === undefined) {\n      this.setState({ value });\n    }\n\n    if (this.props.onChange) {\n      this.props.onChange(value);\n    }\n  }\n\n  /**\n   * Communicates the removal of a value from the selected options.\n   * @param {number|string} value - The value to be removed.\n   */\n  handleDeselect(value) {\n    this.handleChange(SelectUtil.deselect(this.props, this.state, value));\n\n    if (this.props.onDeselect) {\n      this.props.onDeselect(value);\n    }\n  }\n\n  /**\n   * Communicates the selection of a value.\n   * @param {number|string} value - The value of the selected option.\n   * @param {ReactNode} option - The selected option.\n   */\n  handleSelect(value, option) {\n    const newValue = [...SelectUtil.value(this.props, this.state), value];\n    this.handleChange(newValue);\n\n    if (this.props.onSelect) {\n      this.props.onSelect(value, option);\n    }\n  }\n\n  render() {\n    const {\n      children, defaultValue, onChange, placeholder, required, value, intl, ...otherProps\n    } = this.props;\n\n    const defaultPlaceholder = intl.formatMessage({ id: 'Terra.form.select.defaultDisplay' });\n    const selectPlaceholder = placeholder === undefined ? defaultPlaceholder : placeholder;\n\n    return (\n      <Frame\n        {...otherProps}\n        data-terra-select\n        value={SelectUtil.value(this.props, this.state)}\n        display={this.display()}\n        onDeselect={this.handleDeselect}\n        onSelect={this.handleSelect}\n        placeholder={selectPlaceholder}\n        required={required}\n        totalOptions={SelectUtil.getTotalNumberOfOptions(children)}\n      >\n        {children}\n      </Frame>\n    );\n  }\n}\n\nMultiSelect.Option = Option;\nMultiSelect.OptGroup = OptGroup;\nMultiSelect.propTypes = propTypes;\nMultiSelect.defaultProps = defaultProps;\nMultiSelect.isSelect = true;\n\nexport default injectIntl(MultiSelect);\n"},2255:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=i(n(0)),o=i(n(270)),a=i(n(4)),r=i(n(809));function i(e){return e&&e.__esModule?e:{default:e}}var d=a.default.bind(r.default),s=function(){return l.default.createElement(o.default,{placeholder:"Select a color",className:d("form-select")},l.default.createElement(o.default.Option,{value:"blue",display:"Blue"}),l.default.createElement(o.default.Option,{value:"green",display:"Green"}),l.default.createElement(o.default.Option,{value:"purple",display:"Purple"}),l.default.createElement(o.default.Option,{value:"red",display:"Red"}),l.default.createElement(o.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2256:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport MultiSelect from \'terra-form-select/lib/MultiSelect\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst MultiSelectExample = () => (\n  <MultiSelect placeholder="Select a color" className={cx(\'form-select\')}>\n    <MultiSelect.Option value="blue" display="Blue" />\n    <MultiSelect.Option value="green" display="Green" />\n    <MultiSelect.Option value="purple" display="Purple" />\n    <MultiSelect.Option value="red" display="Red" />\n    <MultiSelect.Option value="violet" display="Violet" />\n  </MultiSelect>\n);\n\nexport default MultiSelectExample;\n'},2257:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=function(e){if(e&&e.__esModule)return e;var t=d();if(t&&t.has(e))return t.get(e);var n={};if(null!=e){var l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var a=l?Object.getOwnPropertyDescriptor(e,o):null;a&&(a.get||a.set)?Object.defineProperty(n,o,a):n[o]=e[o]}}n.default=e,t&&t.set(e,n);return n}(n(0)),o=i(n(270)),a=i(n(4)),r=i(n(809));function i(e){return e&&e.__esModule?e:{default:e}}function d(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return d=function(){return e},e}function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)))return;var n=[],l=!0,o=!1,a=void 0;try{for(var r,i=e[Symbol.iterator]();!(l=(r=i.next()).done)&&(n.push(r.value),!t||n.length!==t);l=!0);}catch(e){o=!0,a=e}finally{try{l||null==i.return||i.return()}finally{if(o)throw a}}return n}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var c=a.default.bind(r.default),p=function(){var e=s((0,l.useState)(["blue"]),2),t=e[0],n=e[1];return l.default.createElement(o.default,{placeholder:"Select a color",value:t,onChange:n,className:c("form-select")},l.default.createElement(o.default.Option,{value:"blue",display:"Blue"}),l.default.createElement(o.default.Option,{value:"green",display:"Green"}),l.default.createElement(o.default.Option,{value:"purple",display:"Purple"}),l.default.createElement(o.default.Option,{value:"red",display:"Red"}),l.default.createElement(o.default.Option,{value:"violet",display:"Violet"}))};t.default=p},2258:function(e,t,n){"use strict";n.r(t),t.default='import React, { useState } from \'react\';\nimport MultiSelect from \'terra-form-select/lib/MultiSelect\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst ControlledExample = () => {\n  const [value, setValue] = useState([\'blue\']);\n\n  return (\n    <MultiSelect placeholder="Select a color" value={value} onChange={setValue} className={cx(\'form-select\')}>\n      <MultiSelect.Option value="blue" display="Blue" />\n      <MultiSelect.Option value="green" display="Green" />\n      <MultiSelect.Option value="purple" display="Purple" />\n      <MultiSelect.Option value="red" display="Red" />\n      <MultiSelect.Option value="violet" display="Violet" />\n    </MultiSelect>\n  );\n};\n\nexport default ControlledExample;\n'},2259:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=i(n(0)),o=i(n(270)),a=i(n(4)),r=i(n(809));function i(e){return e&&e.__esModule?e:{default:e}}var d=a.default.bind(r.default),s=function(){return l.default.createElement(o.default,{placeholder:"Select a color",disabled:!0,className:d("form-select"),defaultValue:["red","white","blue"]},l.default.createElement(o.default.Option,{value:"blue",display:"Blue"}),l.default.createElement(o.default.Option,{value:"green",display:"Green"}),l.default.createElement(o.default.Option,{value:"purple",display:"Purple"}),l.default.createElement(o.default.Option,{value:"red",display:"Red"}),l.default.createElement(o.default.Option,{value:"violet",display:"Violet"}),l.default.createElement(o.default.Option,{value:"white",display:"White"}))};t.default=s},2260:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport MultiSelect from \'terra-form-select/lib/MultiSelect\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst DisabledExample = () => (\n  <MultiSelect placeholder="Select a color" disabled className={cx(\'form-select\')} defaultValue={[\'red\', \'white\', \'blue\']}>\n    <MultiSelect.Option value="blue" display="Blue" />\n    <MultiSelect.Option value="green" display="Green" />\n    <MultiSelect.Option value="purple" display="Purple" />\n    <MultiSelect.Option value="red" display="Red" />\n    <MultiSelect.Option value="violet" display="Violet" />\n    <MultiSelect.Option value="white" display="White" />\n  </MultiSelect>\n);\n\nexport default DisabledExample;\n'},2261:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=i(n(0)),o=i(n(270)),a=i(n(4)),r=i(n(809));function i(e){return e&&e.__esModule?e:{default:e}}var d=a.default.bind(r.default),s=function(){return l.default.createElement(o.default,{placeholder:"Select a color",className:d("form-select"),isTouchAccessible:!0},l.default.createElement(o.default.Option,{value:"blue",display:"Blue"}),l.default.createElement(o.default.Option,{value:"green",display:"Green"}),l.default.createElement(o.default.Option,{value:"purple",display:"Purple"}),l.default.createElement(o.default.Option,{value:"red",display:"Red"}),l.default.createElement(o.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2262:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport MultiSelect from \'terra-form-select/lib/MultiSelect\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst IsTouchAccessibleExample = () => (\n  <MultiSelect placeholder="Select a color" className={cx(\'form-select\')} isTouchAccessible>\n    <MultiSelect.Option value="blue" display="Blue" />\n    <MultiSelect.Option value="green" display="Green" />\n    <MultiSelect.Option value="purple" display="Purple" />\n    <MultiSelect.Option value="red" display="Red" />\n    <MultiSelect.Option value="violet" display="Violet" />\n  </MultiSelect>\n);\n\nexport default IsTouchAccessibleExample;\n'},2263:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=i(n(0)),o=i(n(270)),a=i(n(4)),r=i(n(809));function i(e){return e&&e.__esModule?e:{default:e}}var d=a.default.bind(r.default),s=function(){return l.default.createElement(o.default,{placeholder:"Select a color",isInvalid:!0,className:d("form-select")},l.default.createElement(o.default.Option,{value:"blue",display:"Blue"}),l.default.createElement(o.default.Option,{value:"green",display:"Green"}),l.default.createElement(o.default.Option,{value:"purple",display:"Purple"}),l.default.createElement(o.default.Option,{value:"red",display:"Red"}),l.default.createElement(o.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2264:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport MultiSelect from \'terra-form-select/lib/MultiSelect\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst InvalidExample = () => (\n  <MultiSelect placeholder="Select a color" isInvalid className={cx(\'form-select\')}>\n    <MultiSelect.Option value="blue" display="Blue" />\n    <MultiSelect.Option value="green" display="Green" />\n    <MultiSelect.Option value="purple" display="Purple" />\n    <MultiSelect.Option value="red" display="Red" />\n    <MultiSelect.Option value="violet" display="Violet" />\n  </MultiSelect>\n);\n\nexport default InvalidExample;\n'},2265:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=i(n(0)),o=i(n(270)),a=i(n(4)),r=i(n(809));function i(e){return e&&e.__esModule?e:{default:e}}var d=a.default.bind(r.default),s=function(){return l.default.createElement(o.default,{placeholder:"Select a color",required:!0,isIncomplete:!0,className:d("form-select")},l.default.createElement(o.default.Option,{value:"blue",display:"Blue"}),l.default.createElement(o.default.Option,{value:"green",display:"Green"}),l.default.createElement(o.default.Option,{value:"purple",display:"Purple"}),l.default.createElement(o.default.Option,{value:"red",display:"Red"}),l.default.createElement(o.default.Option,{value:"violet",display:"Violet"}))};t.default=s},2266:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport MultiSelect from \'terra-form-select/lib/MultiSelect\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst IncompleteExample = () => (\n  <MultiSelect placeholder="Select a color" required isIncomplete className={cx(\'form-select\')}>\n    <MultiSelect.Option value="blue" display="Blue" />\n    <MultiSelect.Option value="green" display="Green" />\n    <MultiSelect.Option value="purple" display="Purple" />\n    <MultiSelect.Option value="red" display="Red" />\n    <MultiSelect.Option value="violet" display="Violet" />\n  </MultiSelect>\n);\n\nexport default IncompleteExample;\n'},2267:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=i(n(0)),o=i(n(270)),a=i(n(4)),r=i(n(809));function i(e){return e&&e.__esModule?e:{default:e}}var d=a.default.bind(r.default),s=function(){return l.default.createElement(o.default,{placeholder:"Select a color",maxHeight:150,className:d("form-select")},l.default.createElement(o.default.Option,{value:"black",display:"Black"}),l.default.createElement(o.default.Option,{value:"blue",display:"Blue"}),l.default.createElement(o.default.Option,{value:"brown",display:"Brown"}),l.default.createElement(o.default.Option,{value:"green",display:"Green"}),l.default.createElement(o.default.Option,{value:"purple",display:"Purple"}),l.default.createElement(o.default.Option,{value:"red",display:"Red"}),l.default.createElement(o.default.Option,{value:"violet",display:"Violet"}),l.default.createElement(o.default.Option,{value:"white",display:"White"}),l.default.createElement(o.default.Option,{value:"yellow",display:"Yellow"}))};t.default=s},2268:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport MultiSelect from \'terra-form-select/lib/MultiSelect\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst MaxHeightExample = () => (\n  <MultiSelect placeholder="Select a color" maxHeight={150} className={cx(\'form-select\')}>\n    <MultiSelect.Option value="black" display="Black" />\n    <MultiSelect.Option value="blue" display="Blue" />\n    <MultiSelect.Option value="brown" display="Brown" />\n    <MultiSelect.Option value="green" display="Green" />\n    <MultiSelect.Option value="purple" display="Purple" />\n    <MultiSelect.Option value="red" display="Red" />\n    <MultiSelect.Option value="violet" display="Violet" />\n    <MultiSelect.Option value="white" display="White" />\n    <MultiSelect.Option value="yellow" display="Yellow" />\n  </MultiSelect>\n);\n\nexport default MaxHeightExample;\n'},2269:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=i(n(0)),o=i(n(270)),a=i(n(4)),r=i(n(809));function i(e){return e&&e.__esModule?e:{default:e}}var d=a.default.bind(r.default),s=function(){return l.default.createElement(o.default,{placeholder:"Select a color",className:d("form-select")},l.default.createElement(o.default.OptGroup,{label:"Shade of blue"},l.default.createElement(o.default.Option,{value:"blue",display:"Blue"}),l.default.createElement(o.default.Option,{value:"cyan",display:"Cyan"}),l.default.createElement(o.default.Option,{value:"teal",display:"Teal"}),l.default.createElement(o.default.Option,{value:"azul",display:"Azul"}),l.default.createElement(o.default.Option,{value:"aqua",display:"Aqua"})),l.default.createElement(o.default.OptGroup,{label:"Shades of green"},l.default.createElement(o.default.Option,{value:"green",display:"Green"}),l.default.createElement(o.default.Option,{value:"forest",display:"Forest Green"}),l.default.createElement(o.default.Option,{value:"dark",display:"Dark Green"}),l.default.createElement(o.default.Option,{value:"neon",display:"Neon Green"})))};t.default=s},2270:function(e,t,n){"use strict";n.r(t),t.default='import React from \'react\';\nimport MultiSelect from \'terra-form-select/lib/MultiSelect\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst OptGroupExample = () => (\n  <MultiSelect placeholder="Select a color" className={cx(\'form-select\')}>\n    <MultiSelect.OptGroup label="Shade of blue">\n      <MultiSelect.Option value="blue" display="Blue" />\n      <MultiSelect.Option value="cyan" display="Cyan" />\n      <MultiSelect.Option value="teal" display="Teal" />\n      <MultiSelect.Option value="azul" display="Azul" />\n      <MultiSelect.Option value="aqua" display="Aqua" />\n    </MultiSelect.OptGroup>\n    <MultiSelect.OptGroup label="Shades of green">\n      <MultiSelect.Option value="green" display="Green" />\n      <MultiSelect.Option value="forest" display="Forest Green" />\n      <MultiSelect.Option value="dark" display="Dark Green" />\n      <MultiSelect.Option value="neon" display="Neon Green" />\n    </MultiSelect.OptGroup>\n  </MultiSelect>\n);\n\nexport default OptGroupExample;\n'},2986:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=N(n(0)),o=N(n(799)),a=N(n(896)),r=n(828),i=N(n(2253)),d=N(n(2254)),s=N(n(897)),c=N(n(898)),p=N(n(899)),u=N(n(900)),m=N(n(2255)),f=N(n(2256)),b=N(n(2257)),h=N(n(2258)),g=N(n(2259)),y=N(n(2260)),v=N(n(2261)),S=N(n(2262)),O=N(n(2263)),w=N(n(2264)),_=N(n(2265)),x=N(n(2266)),E=N(n(2267)),T=N(n(2268)),M=N(n(2269)),P=N(n(2270));function N(e){return e&&e.__esModule?e:{default:e}}var k=function(){return l.default.createElement(o.default,{packageName:r.name,packageVersion:r.version,readme:a.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/terra-form-select",propsTables:[{componentName:"Multi Select",componentSrc:d.default,componentProps:i.default},{componentName:"Option",componentSrc:c.default,componentProps:s.default},{componentName:"OptGroup",componentSrc:u.default,componentProps:p.default}],examples:[{title:"MultiSelect",description:"A MultiSelect allows searching and selecting multiple options.",example:l.default.createElement(m.default,null),source:f.default},{title:"Is Touch Accessible",description:"Ensure accessibility on touch devices. Will render the dropdown menu in normal DOM flow with position absolute. By default, the menu renders in a portal, which is inaccessible on touch devices.",example:l.default.createElement(v.default,null),source:S.default},{title:"Disabled",example:l.default.createElement(g.default,null),source:y.default},{title:"Invalid",description:"Applies theme-specific styling for invalid. Will also display error text when used with a Field.",example:l.default.createElement(O.default,null),source:w.default},{title:"Incomplete",description:"Applies theme-specific styling for incomplete. ***Note: Only use incomplete if given specific guidance, reserved for specific applications when no value has been provided. Not for general use.***",example:l.default.createElement(_.default,null),source:x.default},{title:"Ability to add Option Groups",description:"An OptGroup provides a way to group options together within the listbox.",example:l.default.createElement(M.default,null),source:P.default},{title:"Ability to set a Maximum Height",description:"An example of implementing a custom max height of the dropdown.",example:l.default.createElement(E.default,null),source:T.default},{title:"Create a Controlled MultiSelect",description:"An example of implementing a controlled MultiSelect.",example:l.default.createElement(b.default,null),source:h.default}]})};t.default=k},797:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=r(n(0)),o=r(n(4)),a=r(n(798));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(a.default),d=function(e){var t=e.packageName,n=e.packageUrl,o=e.packageVersion;return o?l.default.createElement("div",{className:i("badge-container")},l.default.createElement("a",{className:i("badge"),href:n||"https://www.npmjs.org/package/".concat(t,"/v/").concat(o)},l.default.createElement("span",{className:i("badge-name")},n?"package":"npm"),l.default.createElement("span",{className:i("badge-version")},"v".concat(o)))):l.default.createElement("a",{href:"https://www.npmjs.org/package/".concat(t)},l.default.createElement("img",{src:"https://badgen.net/npm/v/".concat(t),alt:"NPM version"}))};t.default=d},798:function(e,t,n){e.exports={badge:"NpmBadge-module__badge___1Cu7Z","badge-container":"NpmBadge-module__badge-container___2zgQi","badge-name":"NpmBadge-module__badge-name___17OzL","badge-version":"NpmBadge-module__badge-version___2Vkei"}},799:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=p(n(0)),o=p(n(2)),a=p(n(805)),r=p(n(804)),i=p(n(4)),d=p(n(797)),s=p(n(800)),c=p(n(803));function p(e){return e&&e.__esModule?e:{default:e}}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e}).apply(this,arguments)}function m(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var f=i.default.bind(c.default),b={children:o.default.node,packageName:o.default.string,packageUrl:o.default.string,packageVersion:o.default.string,readme:o.default.string,srcPath:o.default.string,examples:o.default.arrayOf(o.default.shape({title:o.default.string,description:o.default.node,example:o.default.element,source:o.default.string})),propsTables:o.default.arrayOf(o.default.shape({componentSrc:o.default.string,componentName:o.default.string,componentProps:o.default.string,propsResolution:o.default.string}))},h=function(e){var t,n=e.packageName,o=e.packageVersion,i=e.packageUrl,c=e.readme,p=e.srcPath,b=e.examples,h=e.propsTables,g=e.children,y=m(e,["packageName","packageVersion","packageUrl","readme","srcPath","examples","propsTables","children"]),v=b;h&&(t=h);for(var S=0,O=0;O<v.length;O+=1)v[O].id=S,S+=1;if(t)for(var w=0;w<t.length;w+=1)t[w].id=S,S+=1;var _,x=f(["doc-template",y.className]);if(v.length>0){var E=v.length>1?"Examples":"Example";_=l.default.createElement("h1",{className:f("examples-header")},E)}var T=l.default.createElement(d.default,{packageName:n,packageUrl:i,packageVersion:o});return l.default.createElement("div",u({},y,{className:x}),l.default.createElement("div",{className:f("doc-card")},n&&T,c&&l.default.createElement(r.default,{src:c}),p&&l.default.createElement("a",{href:p},"View component source code")),_,v.map((function(e){return l.default.createElement(s.default,{title:e.title,example:e.example,exampleSrc:e.source,description:e.description,key:e.id})})),l.default.createElement("div",{className:f("doc-card")},h[0]&&h[0].componentProps?t.map((function(e){return l.default.createElement("div",{className:f("props-table-markdown"),key:e.id},l.default.createElement("h2",null,e.componentName," Props"),l.default.createElement(r.default,{src:e.componentProps}))})):t.map((function(e){return l.default.createElement(a.default,{src:e.componentSrc,componentName:e.componentName,key:e.id,propsResolution:e.propsResolution})}))),g&&l.default.createElement("div",{className:f("doc-card")},g))};h.propTypes=b,h.defaultProps={packageName:"",packageUrl:"",packageVersion:"",readme:"",srcPath:"",examples:[],propsTables:[]};var g=h;t.default=g},800:function(e,t,n){"use strict";function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=p(n(0)),a=p(n(2)),r=p(n(806)),i=p(n(807)),d=p(n(4)),s=p(n(801)),c=p(n(802));function p(e){return e&&e.__esModule?e:{default:e}}function u(e){return(u="function"==typeof Symbol&&"symbol"===l(Symbol.iterator)?function(e){return l(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":l(e)})(e)}function m(){return(m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var l in n)Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}return e}).apply(this,arguments)}function f(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function b(e,t){for(var n=0;n<t.length;n++){var l=t[n];l.enumerable=l.enumerable||!1,l.configurable=!0,"value"in l&&(l.writable=!0),Object.defineProperty(e,l.key,l)}}function h(e){return(h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function g(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function y(e,t){return(y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}r.default.registerLanguage("jsx",i.default);var v=d.default.bind(s.default),S={example:a.default.element,exampleSrc:a.default.string,title:a.default.string,description:a.default.node,children:a.default.element},O={example:void 0,exampleSrc:void 0,title:void 0,description:void 0,children:void 0},w=function(e){function t(e){var n,l,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),l=this,(n=!(o=h(t).call(this,e))||"object"!==u(o)&&"function"!=typeof o?g(l):o).state={isExpanded:!1,isBackgroundTransparent:!1},n.handleBgToggle=n.handleBgToggle.bind(g(n)),n.handleCodeToggle=n.handleCodeToggle.bind(g(n)),n}var n,l,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}(t,e),n=t,(l=[{key:"handleBgToggle",value:function(){this.setState((function(e){return{isBackgroundTransparent:!e.isBackgroundTransparent}}))}},{key:"handleCodeToggle",value:function(){this.setState((function(e){return{isExpanded:!e.isExpanded}}))}},{key:"render",value:function(){var e=this.props,t=e.title,n=e.example,l=e.exampleSrc,a=e.children,i=e.description,d=f(e,["title","example","exampleSrc","children","description"]),s=this.state,p=s.isExpanded,u={};return s.isBackgroundTransparent&&(u={backgroundColor:"rgba(0, 0, 0, 0)"}),o.default.createElement("div",m({},d,{className:v("template",d.className)}),t&&o.default.createElement("div",{className:v("header")},o.default.createElement("h2",{className:v("title")},t)),o.default.createElement("div",{className:v("content"),style:u},i&&o.default.createElement("div",{className:v("description")},i),n,a),l&&o.default.createElement("div",{className:v("footer")},o.default.createElement("div",{className:v("button-container")},o.default.createElement("button",{type:"button",className:v("bg-toggle"),onClick:this.handleBgToggle},"Toggle Background"),o.default.createElement("button",{type:"button",className:v("code-toggle"),onClick:this.handleCodeToggle},o.default.createElement("span",{className:v("chevron-left")}),o.default.createElement("span",null,"Code"),o.default.createElement("span",{className:v("chevron-right")}))),o.default.createElement("div",{className:v("code",{"is-expanded":p}),"aria-hidden":!p},p?o.default.createElement(r.default,{language:"jsx",style:c.default,customStyle:{margin:"0",borderRadius:"0"}},l):void 0)))}}])&&b(n.prototype,l),a&&b(n,a),t}(o.default.Component);w.propTypes=S,w.defaultProps=O;var _=w;t.default=_},801:function(e,t,n){e.exports={template:"ExampleTemplate-module__template___MEAKz",header:"ExampleTemplate-module__header___13zqD",content:"ExampleTemplate-module__content___1Zdto",description:"ExampleTemplate-module__description___pnaPA",footer:"ExampleTemplate-module__footer___2jmFy","button-container":"ExampleTemplate-module__button-container___2JIjW",code:"ExampleTemplate-module__code___1u1x4","is-expanded":"ExampleTemplate-module__is-expanded___2fXEU","bg-toggle":"ExampleTemplate-module__bg-toggle___1rE0y","code-toggle":"ExampleTemplate-module__code-toggle___1B459","chevron-left":"ExampleTemplate-module__chevron-left___2hjZu","chevron-right":"ExampleTemplate-module__chevron-right___fnHrn",title:"ExampleTemplate-module__title___1qQfE"}},802:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l="#D8DEE9",o="#B2B2B2",a="#c5a5c5",r="#5a9bcf",i="#8dc891",d="#d7deea",s="#FAC863",c={'code[class*="language-"]':{color:"#f8f8f2",background:"none",textShadow:"0 1px rgba(0, 0, 0, 0.3)",fontFamily:'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"#fff",background:"rgb(40, 44, 52)",textShadow:"0 1px rgba(0, 0, 0, 0.3)",fontFamily:'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",padding:"1em",margin:".5em 0",overflow:"auto",borderRadius:"0.3em"},':not(pre) > code[class*="language-"]':{background:"rgb(40, 44, 52)",padding:".1em",borderRadius:".3em",whiteSpace:"normal"},"plain-text":{color:"#ffffff"},"attr-name":{color:a},comment:{color:o},"block-comment":{color:o},prolog:{color:o},doctype:{color:o},cdata:{color:o},property:{color:r},number:{color:r},"function-name":{color:r},constant:{color:r},symbol:{color:r},deleted:{color:r},boolean:{color:"#ff8b50"},tag:{color:"#fc929e"},string:{color:i},punctuation:{color:"#88C6BE"},selector:{color:l},char:{color:l},builtin:{color:l},inserted:{color:l},function:{color:"#79b6f2"},operator:{color:d},entity:{color:d,cursor:"help"},url:{color:d},".language-css .token.string":{color:d},".style .token.string":{color:d},variable:{color:d},"attr-value":{color:i},keyword:{color:a},"at-rule":{color:s},"class-name":{color:s},important:{fontWeight:400},bold:{fontWeight:700},italic:{fontStyle:"italic"},".namespace":{opacity:.7}};t.default=c},803:function(e,t,n){e.exports={"examples-header":"DocTemplate-module__examples-header___P3qFL","doc-template":"DocTemplate-module__doc-template___JSxEJ","doc-card":"DocTemplate-module__doc-card___2jEVe","props-table-markdown":"DocTemplate-module__props-table-markdown___1926W"}},809:function(e,t,n){e.exports={"form-select":"FormSelectDocCommon-module__form-select___3HVkD"}},828:function(e){e.exports=JSON.parse('{"name":"terra-form-select","main":"lib/Select.js","version":"5.35.0","description":"Provides a drop down of selectable options.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-core.git"},"keywords":["Cerner","Terra","terra-form-select","Form","Select","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-core/issues"},"homepage":"https://github.com/cerner/terra-core#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0"},"dependencies":{"classnames":"^2.2.5","keycode-js":"^2.0.1","lodash.uniqueid":"^4.0.1","prop-types":"^15.5.8","react-lifecycles-compat":"^3.0.2","terra-doc-template":"^2.20.0","terra-form-field":"^3.28.0","terra-hookshot":"^5.0.0","terra-mixins":"^1.33.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},896:function(e,t,n){"use strict";n.r(t),t.default="# Terra Form Select\n\nThe Select component provides a dropdown of selectable options.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-form-select`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n| react-intl | ^2.8.0 |\n\n\n\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## Implementation Notes:\n\nThe Form-Select component must be composed inside the [Base][1] component with a locale in order for it to load the correct translation strings.\n\n[1]: https://github.com/cerner/terra-core/tree/master/packages/terra-base/docs\n\n## Component Features\n\n- [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n- [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\n- [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\n- [Internationalization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n- [Localization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n- [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\n"},897:function(e,t){e.exports='<table style="display: table; margin-bottom: 1.25rem"><thead><tr style="line-height: 1.5"><th style="width: 10%">Prop Name</th><th style="width: 25%">Type</th><th style="width: 10%">Is Required</th><th style="width: 10%">Default Value</th><th style="width: 45%">Description</th></tr></thead><tbody><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">disabled</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the option is disabled.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">display</td><td style="padding-bottom: 1.8rem">string</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The display text of the option.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">value</td><td style="padding-bottom: 1.8rem">union</td><td style="color: #d53700; padding-bottom: 1.8rem">required</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">The value of the option. The value must be unique.</td></tr></tbody></table>'},898:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport SharedUtil from './_SharedUtil';\nimport styles from './_Option.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * Whether the option is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The display text of the option.\n   */\n  display: PropTypes.string,\n  /**\n   * @private\n   * Whether the option is active.\n   */\n  isActive: PropTypes.bool,\n  /**\n   * @private\n   * Whether the option is a custom text entry.\n   */\n  isAddOption: PropTypes.bool,\n  /**\n   * @private\n   * Whether the option is checkable.\n   */\n  isCheckable: PropTypes.bool,\n  /**\n   * @private\n   * Whether the option is selected.\n   */\n  isSelected: PropTypes.bool,\n  /**\n   * The value of the option. The value must be unique.\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  /**\n   * @private\n   * Variant of select component\n   */\n  variant: PropTypes.string,\n};\n\nconst defaultProps = {\n  disabled: false,\n  display: undefined,\n};\n\nconst Option = ({\n  disabled,\n  display,\n  value,\n  variant,\n  isActive,\n  isSelected,\n  isCheckable,\n  isAddOption,\n  ...customProps\n}) => {\n  const optionClassNames = cx([\n    'option',\n    { 'is-active': isActive },\n    { 'is-checkable': isCheckable && !isAddOption },\n    { 'is-default': !isCheckable && !isAddOption },\n    { 'is-disabled': disabled },\n    { 'is-selected': isSelected },\n    { 'is-add-option': isAddOption },\n    customProps.className,\n  ]);\n\n  let role = 'option'; // Used for JAWs and VoiceOver on iOS\n\n  /**\n   * VoiceOver in Safari on desktop has issues with role=\"option\" with the combination of the\n   * aria-live section we have and will stutter when reading options.\n   * Switching to role=\"radio\" and role=\"checkbox\" mitigates this behavior.\n   */\n  if (SharedUtil.isSafari() && !('ontouchstart' in window)) {\n    role = 'radio';\n\n    if (variant === 'tag' || variant === 'multiple') {\n      role = 'checkbox';\n    }\n  }\n\n  return (\n    <li\n      role={role}\n      {...customProps}\n      disabled={disabled}\n      className={optionClassNames}\n      aria-selected={isSelected} // Needed to allow VoiceOver on iOS to announce selected state\n      aria-checked={isSelected} // Needed to allow JAWS to announce \"selected\" state\n      aria-disabled={disabled}\n      tabIndex=\"0\" // eslint-disable-line jsx-a11y/no-noninteractive-tabindex\n      data-terra-select-option\n    >\n      {(isCheckable || isAddOption) && <span className={cx('icon')} />}\n      <span className={cx('display')}>{display}</span>\n    </li>\n  );\n};\n\nOption.propTypes = propTypes;\nOption.defaultProps = defaultProps;\nOption.isOption = true;\n\nexport default Option;\n"},899:function(e,t){e.exports='<table style="display: table; margin-bottom: 1.25rem"><thead><tr style="line-height: 1.5"><th style="width: 10%">Prop Name</th><th style="width: 25%">Type</th><th style="width: 10%">Is Required</th><th style="width: 10%">Default Value</th><th style="width: 45%">Description</th></tr></thead><tbody><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">children</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">The group options.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">disabled</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the option group is disabled.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">label</td><td style="padding-bottom: 1.8rem">node</td><td style="color: #d53700; padding-bottom: 1.8rem">required</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">The group label.</td></tr></tbody></table>'},900:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport classNames from 'classnames/bind';\nimport styles from './_OptGroup.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n   * The group options.\n   */\n  children: PropTypes.node,\n  /**\n   * Whether the option group is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @private\n   * The intl object containing translations. This is retrieved from the context automatically by injectIntl.\n   */\n  intl: intlShape.isRequired,\n  /**\n   * The group label.\n   */\n  label: PropTypes.node.isRequired,\n};\n\nconst defaultProps = {\n  disabled: false,\n};\n\nconst OptGroup = ({\n  children,\n  disabled,\n  intl,\n  label,\n}) => (\n  <li className={cx('opt-group', { 'is-disabled': disabled })} role=\"group\">\n    <div className={cx('label')}>\n      {label}\n    </div>\n    <ul className={cx('options')} role=\"listbox\" aria-label={intl.formatMessage({ id: 'Terra.form.select.option' })}>\n      {React.Children.map(children, child => (\n        React.cloneElement(child, { disabled: disabled || !!child.props.disabled })\n      ))}\n    </ul>\n  </li>\n);\n\nOptGroup.propTypes = propTypes;\nOptGroup.defaultProps = defaultProps;\nOptGroup.isOptGroup = true;\n\nexport default injectIntl(OptGroup);\n"}}]);
//# sourceMappingURL=74-540e3eeb01fe34e01710.js.map