(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{1511:function(e,t,n){e.exports={"overlay-container":"OverlayDocCommon-module__overlay-container___36iLI"}},2535:function(e,t,n){"use strict";n.r(t),t.default="# Terra Overlay\nThe Overlay component is a component that creates an semi-transparent overlay screen that blocks interactions with the elements underneath the display. There are two types of overlays: fullscreen and relative to its container.\n\nWhen creating as an overlay relative to its container, place the overlay component within the overlay wrapper and the element(s) which should be hidden by overlay within the content(children) wrapper of Overlay Container subcomponent.\n\nA Loading Overlay is a specialized Overlay subcomponent that displays an overlay with a spinner icon and loading message.\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-overlay`\n\n\x3c!-- AUTO-GENERATED-CONTENT:START Peer Dependencies --\x3e\n## Peer Dependencies\n\nThis component requires the following peer dependencies be installed in your app for the component to properly function.\n\n| Peer Dependency | Version |\n|-|-|\n| react | ^16.8.5 |\n| react-dom | ^16.8.5 |\n| react-intl | ^2.8.0 |\n\n\n\n\x3c!-- AUTO-GENERATED-CONTENT:END --\x3e\n\n## Implementation Notes:\n\nThe Overlay component must be composed inside the [Base][1] component with a locale in order for it to load the correct translation strings.\n\n[1]: https://github.com/cerner/terra-core/tree/master/packages/terra-base/docs\n\n## Usage\n\n# Overlay\n```jsx\nimport React from 'react';\nimport Button from 'terra-button';\nimport Overlay from 'terra-overlay';\nimport OverlayContainer from 'terra-overlay/lib/OverlayContainer';\n\nclass OverlayExample extends React.Component {\n  constructor() {\n    super();\n    this.state = { show: false };\n    this.handleTriggerOverlay = this.handleTriggerOverlay.bind(this);\n    this.handleOnRequestESC = this.handleOnRequestESC.bind(this);\n  }\n\n  handleTriggerOverlay() {\n    this.setState({ show: true });\n  }\n\n  handleOnRequestESC() {\n    this.setState({ show: false });\n  }\n\n  addOverlay() {\n    return (\n      <Overlay isOpen={this.state.show} isRelativeToContainer onRequestClose={this.handleOnRequestESC}>\n        <p>Close by clicking the overlay or pressing the ESC key.</p>\n      </Overlay>\n    );\n  }\n\n  render() {\n    return (\n      <OverlayContainer style={{ height: '100px', width: '100%' }} overlay={this.addOverlay()}>'\n        <Button onClick={this.handleTriggerOverlay} text=\"Trigger Overlay\" />\n      </OverlayContainer>\n    );\n  }\n}\n\nexport default OverlayExample;\n```\n\n# LoadingOverlay\n```jsx\nimport React from 'react';\nimport Button from 'terra-button';\nimport LoadingOverlay from 'terra-overlay/lib/LoadingOverlay';\nimport OverlayContainer from 'terra-overlay/lib/OverlayContainer';\n\nclass LoadingOverlayExample extends React.Component {\n  constructor() {\n    super();\n    this.state = { show: false };\n    this.handleTriggerOverlay = this.handleTriggerOverlay.bind(this);\n  }\n\n  handleTriggerOverlay() {\n    this.setState({ show: true });\n\n    setTimeout(() => {\n      this.setState({ show: false });\n    }, 5000);\n  }\n\n  addLoadingOverlay() {\n    <LoadingOverlay isOpen={this.state.show} isAnimated />\n  }\n\n  render() {\n    return (\n      <OverlayContainer overlay={this.addLoadingOverlay()}>\n        <Button onClick={this.handleTriggerOverlay} text=\"Trigger Loading Overlay\" />\n      </OverlayContainer>\n    );\n  }\n}\n\nexport default LoadingOverlayExample;\n```\n"},2536:function(e){e.exports=JSON.parse('{"name":"terra-overlay","main":"lib/Overlay.js","version":"3.32.0","description":"The Overlay component is a component that creates an semi-transparent overlay screen that blocks interactions with the elements underneath the display. There are two types of overlays: fullscreen and relative to its container.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-core.git"},"keywords":["Cerner","Terra","terra-overlay","Overlay","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-core/issues"},"homepage":"https://github.com/cerner/terra-core#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0"},"dependencies":{"classnames":"^2.2.5","focus-trap-react":"^6.0.0","keycode-js":"^2.0.1","mutationobserver-shim":"0.3.3","prop-types":"^15.5.8","react-portal":"^4.1.2","terra-button":"^3.25.0","terra-doc-template":"^2.20.0","terra-icon":"^3.22.0","wicg-inert":"^2.1.1"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')},2537:function(e,t){e.exports='<table style="display: table; margin-bottom: 1.25rem"><thead><tr style="line-height: 1.5"><th style="width: 10%">Prop Name</th><th style="width: 25%">Type</th><th style="width: 10%">Is Required</th><th style="width: 10%">Default Value</th><th style="width: 45%">Description</th></tr></thead><tbody><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">backgroundStyle</td><td style="padding-bottom: 1.8rem">enum</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">BackgroundStyles.LIGHT</td><td style="padding-bottom: 1.8rem">The visual theme to be applied to the overlay background. Accepts &#39;light&#39;, &#39;dark&#39;, and &#39;clear&#39; or BackgroundStyles.LIGHT, BackgroundStyles.DARK, and BackgroundStyles.CLEAR.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isAnimated</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Indicates if the icon spinner should be animated.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isOpen</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Indicates if the overlay is open.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isRelativeToContainer</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Indicates if the overlay is relative to the triggering container.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">message</td><td style="padding-bottom: 1.8rem">string</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">The message to be displayed within the overlay.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">rootSelector</td><td style="padding-bottom: 1.8rem">string</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">\'#root\'</td><td style="padding-bottom: 1.8rem">Used to select the root mount DOM node. This is used to help prevent focus from shifting outside of the overlay when it is opened in a portal.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">zIndex</td><td style="padding-bottom: 1.8rem">enum</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">Z-Index layer to apply to the ModalContent and ModalOverlay. Valid values are &#39;100&#39;, &#39;6000&#39;, &#39;7000&#39;, &#39;8000&#39;, or &#39;9000&#39;.</td></tr></tbody></table>'},2538:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport IconSpinner from 'terra-icon/lib/icon/IconSpinner';\nimport { FormattedMessage } from 'react-intl';\nimport Overlay from './Overlay';\nimport styles from './Overlay.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst { BackgroundStyles, zIndexes } = Overlay.Opts;\n\nconst propTypes = {\n  /**\n   * The visual theme to be applied to the overlay background. Accepts 'light', 'dark', and 'clear' or BackgroundStyles.LIGHT, BackgroundStyles.DARK, and BackgroundStyles.CLEAR.\n   */\n  backgroundStyle: PropTypes.oneOf(['light', 'dark', 'clear', BackgroundStyles]),\n  /**\n   * Indicates if the icon spinner should be animated.\n   */\n  isAnimated: PropTypes.bool,\n  /**\n   * Indicates if the overlay is open.\n   */\n  isOpen: PropTypes.bool,\n  /**\n   * Indicates if the overlay is relative to the triggering container.\n   */\n  isRelativeToContainer: PropTypes.bool,\n  /**\n   * The message to be displayed within the overlay.\n   */\n  message: PropTypes.string,\n  /**\n   * Used to select the root mount DOM node. This is used to help prevent focus from shifting outside of the overlay when it is opened in a portal.\n   */\n  rootSelector: PropTypes.string,\n  /**\n  * Z-Index layer to apply to the ModalContent and ModalOverlay. Valid values are '100', '6000', '7000', '8000', or '9000'.\n  */\n  zIndex: PropTypes.oneOf(zIndexes),\n};\n\nconst defaultProps = {\n  isAnimated: false,\n  isOpen: false,\n  backgroundStyle: BackgroundStyles.LIGHT,\n  isRelativeToContainer: false,\n  rootSelector: '#root',\n};\n\nconst LoadingOverlay = ({\n  isAnimated,\n  message,\n  rootSelector,\n  ...customProps\n}) => {\n  // eslint-disable-next-line no-param-reassign\n  delete customProps.onRequestClose;\n\n  return (\n    <Overlay {...customProps} className={cx('loading-overlay', customProps.className)} rootSelector={rootSelector}>\n      <IconSpinner className={cx('icon')} isSpin={isAnimated} height=\"36\" width=\"36\" />\n      {message !== undefined\n        ? <div className={cx('message')}>{message}</div>\n        : (\n          <FormattedMessage id=\"Terra.Overlay.loading\">\n            {loadingMessage => (\n              <div className={cx('message')}>{loadingMessage}</div>\n            )}\n          </FormattedMessage>\n        )}\n    </Overlay>\n  );\n};\n\nLoadingOverlay.propTypes = propTypes;\nLoadingOverlay.defaultProps = defaultProps;\nLoadingOverlay.Opts = Overlay.Opts;\n\nexport default LoadingOverlay;\n"},2539:function(e,t){e.exports='<table style="display: table; margin-bottom: 1.25rem"><thead><tr style="line-height: 1.5"><th style="width: 10%">Prop Name</th><th style="width: 25%">Type</th><th style="width: 10%">Is Required</th><th style="width: 10%">Default Value</th><th style="width: 45%">Description</th></tr></thead><tbody><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">children</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">null</td><td style="padding-bottom: 1.8rem">The content to be displayed within the overlay.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isOpen</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Indicates if the overlay is open.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">backgroundStyle</td><td style="padding-bottom: 1.8rem">enum</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">\'light\'</td><td style="padding-bottom: 1.8rem">The visual theme to be applied to the overlay background. Accepts &#39;light&#39;, &#39;dark&#39;, and &#39;clear&#39;.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isScrollable</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Indicates if the overlay content is scrollable.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onRequestClose</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback triggered on overlay click or ESC key. Setting this enables close behavior.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isRelativeToContainer</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Indicates if the overlay is relative to the triggering container.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">rootSelector</td><td style="padding-bottom: 1.8rem">string</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">\'#root\'</td><td style="padding-bottom: 1.8rem">Used to select the root mount DOM node. This is used to help prevent focus from shifting outside of the overlay when it is opened in a portal.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">zIndex</td><td style="padding-bottom: 1.8rem">enum</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">\'100\'</td><td style="padding-bottom: 1.8rem">Z-Index layer to apply to the ModalContent and ModalOverlay. Valid values are &#39;100&#39;, &#39;6000&#39;, &#39;7000&#39;, &#39;8000&#39;, or &#39;9000&#39;.</td></tr></tbody></table>'},2540:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport FocusTrap from 'focus-trap-react';\nimport { Portal } from 'react-portal';\nimport * as KeyCode from 'keycode-js';\nimport 'mutationobserver-shim';\nimport './_contains-polyfill';\nimport './_matches-polyfill';\nimport styles from './Overlay.module.scss';\nimport Container from './OverlayContainer';\n\nconst cx = classNames.bind(styles);\n\nconst BackgroundStyles = {\n  LIGHT: 'light',\n  DARK: 'dark',\n  CLEAR: 'clear',\n};\n\nconst zIndexes = ['100', '6000', '7000', '8000', '9000'];\n\nconst propTypes = {\n  /**\n  * The content to be displayed within the overlay.\n  */\n  children: PropTypes.node,\n  /**\n  * Indicates if the overlay is open.\n  */\n  isOpen: PropTypes.bool,\n  /**\n  * The visual theme to be applied to the overlay background. Accepts 'light', 'dark', and 'clear'.\n  */\n  backgroundStyle: PropTypes.oneOf(['light', 'dark', 'clear']),\n  /**\n  * Indicates if the overlay content is scrollable.\n  */\n  isScrollable: PropTypes.bool,\n  /**\n  * Callback triggered on overlay click or ESC key. Setting this enables close behavior.\n  */\n  onRequestClose: PropTypes.func,\n  /**\n  * Indicates if the overlay is relative to the triggering container.\n  */\n  isRelativeToContainer: PropTypes.bool,\n  /**\n   * Used to select the root mount DOM node. This is used to help prevent focus from shifting outside of the overlay when it is opened in a portal.\n   */\n  rootSelector: PropTypes.string,\n  /**\n  * Z-Index layer to apply to the ModalContent and ModalOverlay. Valid values are '100', '6000', '7000', '8000', or '9000'.\n  */\n  zIndex: PropTypes.oneOf(zIndexes),\n};\n\nconst defaultProps = {\n  children: null,\n  isOpen: false,\n  backgroundStyle: BackgroundStyles.LIGHT,\n  isScrollable: false,\n  isRelativeToContainer: false,\n  onRequestClose: undefined,\n  rootSelector: '#root',\n  zIndex: '100',\n};\n\nclass Overlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setContainer = this.setContainer.bind(this);\n    this.disableContainerChildrenFocus = this.disableContainerChildrenFocus.bind(this);\n    this.enableContainerChildrenFocus = this.enableContainerChildrenFocus.bind(this);\n    this.shouldHandleESCKeydown = this.shouldHandleESCKeydown.bind(this);\n    this.shouldHandleClick = this.shouldHandleClick.bind(this);\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!Element.prototype.hasOwnProperty('inert')) {\n      // IE10 throws an error if wicg-inert is imported too early, as wicg-inert tries to set an observer on document.body which may not exist on import\n      // eslint-disable-next-line global-require\n      require('wicg-inert/dist/inert');\n    }\n    document.addEventListener('keydown', this.shouldHandleESCKeydown);\n\n    if (this.props.isOpen) {\n      this.disableContainerChildrenFocus();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.isOpen && !prevProps.isOpen) {\n      this.disableContainerChildrenFocus();\n    } else if (!this.props.isOpen && prevProps.isOpen) {\n      this.enableContainerChildrenFocus();\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.shouldHandleESCKeydown);\n    this.enableContainerChildrenFocus();\n  }\n\n  setContainer(node) {\n    if (!node) { return; } // Ref callbacks happen on mount and unmount, element is null on unmount\n    this.overflow = document.documentElement.style.overflow;\n    if (this.props.isRelativeToContainer) {\n      this.container = node.parentNode;\n    } else {\n      this.container = null;\n    }\n  }\n\n  disableContainerChildrenFocus() {\n    if (this.props.isRelativeToContainer) {\n      if (this.container && this.container.querySelector('[data-terra-overlay-container-content]')) {\n        this.container.querySelector('[data-terra-overlay-container-content]').setAttribute('inert', '');\n      }\n    } else {\n      const selector = this.props.rootSelector;\n\n      if (document.querySelector(selector) && !document.querySelector(selector).hasAttribute('data-overlay-count')) {\n        document.querySelector(selector).setAttribute('data-overlay-count', '1');\n        document.querySelector(selector).setAttribute('inert', '');\n      } else if (document.querySelector(selector) && document.querySelector(selector).hasAttribute('data-overlay-count')) {\n        const inert = +document.querySelector(selector).getAttribute('data-overlay-count');\n\n        document.querySelector(selector).setAttribute('data-overlay-count', `${inert + 1}`);\n        document.querySelector(selector).setAttribute('inert', '');\n      }\n      document.documentElement.style.overflow = 'hidden';\n    }\n  }\n\n  enableContainerChildrenFocus() {\n    if (this.props.isRelativeToContainer) {\n      if (this.container && this.container.querySelector('[data-terra-overlay-container-content]')) {\n        this.container.querySelector('[data-terra-overlay-container-content]').removeAttribute('inert');\n        this.container.querySelector('[data-terra-overlay-container-content]').removeAttribute('aria-hidden');\n      }\n    } else {\n      const selector = this.props.rootSelector;\n      if (document.querySelector(selector)) { // Guard for Jest testing\n        const inert = +document.querySelector(selector).getAttribute('data-overlay-count');\n\n        if (inert === 1) {\n          document.querySelector(selector).removeAttribute('data-overlay-count');\n          document.querySelector(selector).removeAttribute('inert');\n          document.querySelector(selector).removeAttribute('aria-hidden');\n        } else if (inert && inert > 1) {\n          document.querySelector(selector).setAttribute('data-overlay-count', `${inert - 1}`);\n        }\n      }\n      document.documentElement.style.overflow = this.overflow;\n    }\n  }\n\n  shouldHandleESCKeydown(event) {\n    if (this.props.isOpen && event.keyCode === KeyCode.KEY_ESCAPE) {\n      this.handleCloseEvent(event);\n      event.preventDefault();\n    }\n  }\n\n  shouldHandleClick(event) {\n    if (this.props.isOpen) {\n      this.handleCloseEvent(event);\n    }\n  }\n\n  handleCloseEvent(event) {\n    if (this.props.onRequestClose) {\n      this.props.onRequestClose(event);\n    }\n  }\n\n  render() {\n    const {\n      children, isOpen, backgroundStyle, isScrollable, isRelativeToContainer, onRequestClose, rootSelector, zIndex, ...customProps\n    } = this.props;\n    const type = isRelativeToContainer ? 'container' : 'fullscreen';\n\n    if (!isOpen) {\n      return null;\n    }\n\n    let zIndexLayer = '100';\n    if (zIndexes.indexOf(zIndex) >= 0) {\n      zIndexLayer = zIndex;\n    }\n\n    const OverlayClassNames = cx([\n      'overlay',\n      type,\n      backgroundStyle,\n      { scrollable: isScrollable },\n      customProps.className,\n      `layer-${zIndexLayer}`,\n    ]);\n\n    /*\n      tabIndex set to 0 allows screen readers like VoiceOver to read overlay content when its displayed.\n      Key events are added on mount.\n    */\n    /* eslint-disable jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-tabindex */\n    const overlayComponent = (\n      <div {...customProps} ref={this.setContainer} onClick={this.shouldHandleClick} className={OverlayClassNames} tabIndex=\"0\">\n        <div className={cx('content')}>\n          {children}\n        </div>\n      </div>\n    );\n    /* eslint-enable jsx-a11y/no-static-element-interactions, jsx-a11y/click-events-have-key-events, jsx-a11y/no-noninteractive-tabindex */\n\n    if (isRelativeToContainer) {\n      return overlayComponent;\n    }\n\n    const backgroundScrollContent = (\n      <div className={cx('background-scroll-content')}>\n        <div className={cx('inner')} />\n      </div>\n    );\n\n    return (\n      <Portal>\n        {backgroundScrollContent}\n        <FocusTrap>\n          {/* div addresses child focus change introduced in focus-trap-react v5.0.0 */}\n          <div>\n            {overlayComponent}\n          </div>\n        </FocusTrap>\n      </Portal>\n    );\n  }\n}\n\nconst Opts = { BackgroundStyles, zIndexes };\n\nOverlay.propTypes = propTypes;\nOverlay.defaultProps = defaultProps;\nOverlay.Opts = Opts;\nOverlay.Container = Container;\n\nexport default Overlay;\n"},2541:function(e,t){e.exports='<table style="display: table; margin-bottom: 1.25rem"><thead><tr style="line-height: 1.5"><th style="width: 10%">Prop Name</th><th style="width: 25%">Type</th><th style="width: 10%">Is Required</th><th style="width: 10%">Default Value</th><th style="width: 45%">Description</th></tr></thead><tbody><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">overlay</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">null</td><td style="padding-bottom: 1.8rem">The overlay and the content to be displayed within the overlay.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">children</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">null</td><td style="padding-bottom: 1.8rem">The elements that overlay should hide when overlay isOpen.\nelements which are not included in overlay will be wrapped within children for better use of accessibility.</td></tr></tbody></table>'},2542:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './Overlay.module.scss';\n\nconst cx = classNames.bind(styles);\n\nconst propTypes = {\n  /**\n  * The overlay and the content to be displayed within the overlay.\n  */\n  overlay: PropTypes.node,\n  /**\n  * The elements that overlay should hide when overlay isOpen.\n  * elements which are not included in overlay will be wrapped within children for better use of accessibility.\n  */\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  overlay: null,\n  children: null,\n};\n\nconst OverlayContainer = ({ overlay, children, ...customProps }) => {\n  const OverlayContainerClassNames = cx([\n    'overlay-container',\n    customProps.className,\n  ]);\n\n  return (\n    <div {...customProps} className={OverlayContainerClassNames}>\n      {overlay}\n      <div data-terra-overlay-container-content className={cx('container-content')}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nOverlayContainer.propTypes = propTypes;\nOverlayContainer.defaultProps = defaultProps;\n\nexport default OverlayContainer;\n"},2543:function(e,t,n){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=c(n(0)),a=c(n(129)),l=c(n(168)),i=c(n(50)),s=c(n(4)),d=c(n(1511));function c(e){return e&&e.__esModule?e:{default:e}}function p(e){return(p="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(e){return o(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":o(e)})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=s.default.bind(d.default),g=function(e){function t(){var e,n,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,(e=!(o=m(t).call(this))||"object"!==p(o)&&"function"!=typeof o?y(n):o).state={show:!1},e.handleTriggerOverlay=e.handleTriggerOverlay.bind(y(e)),e.handleTriggerFullScreenOverlay=e.handleTriggerFullScreenOverlay.bind(y(e)),e.handleOnRequestESC=e.handleOnRequestESC.bind(y(e)),e}var n,o,s;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(t,e),n=t,(o=[{key:"handleTriggerOverlay",value:function(){this.setState({show:!0,relative:!0})}},{key:"handleTriggerFullScreenOverlay",value:function(){this.setState({show:!0,relative:!1})}},{key:"handleOnRequestESC",value:function(){this.setState({show:!1})}},{key:"addOverlay",value:function(){return r.default.createElement(a.default,{isOpen:this.state.show,isRelativeToContainer:this.state.relative,onRequestClose:this.handleOnRequestESC,zIndex:"6000"},r.default.createElement("p",null,"Close by clicking the overlay or pressing the ESC key."))}},{key:"render",value:function(){return r.default.createElement(l.default,{className:f("overlay-container"),overlay:this.addOverlay()},r.default.createElement(i.default,{text:"Trigger Container Overlay",onClick:this.handleTriggerOverlay}),r.default.createElement(i.default,{text:"Trigger FullScreen Overlay",onClick:this.handleTriggerFullScreenOverlay}))}}])&&u(n.prototype,o),s&&u(n,s),t}(r.default.Component);t.default=g},2544:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport Overlay from 'terra-overlay';\nimport OverlayContainer from 'terra-overlay/lib/OverlayContainer';\nimport Button from 'terra-button';\nimport classNames from 'classnames/bind';\nimport styles from './OverlayDocCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nclass OverlayExample extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { show: false };\n    this.handleTriggerOverlay = this.handleTriggerOverlay.bind(this);\n    this.handleTriggerFullScreenOverlay = this.handleTriggerFullScreenOverlay.bind(this);\n    this.handleOnRequestESC = this.handleOnRequestESC.bind(this);\n  }\n\n  handleTriggerOverlay() {\n    this.setState({ show: true, relative: true });\n  }\n\n  handleTriggerFullScreenOverlay() {\n    this.setState({ show: true, relative: false });\n  }\n\n  handleOnRequestESC() {\n    this.setState({ show: false });\n  }\n\n  addOverlay() {\n    return (\n      <Overlay isOpen={this.state.show} isRelativeToContainer={this.state.relative} onRequestClose={this.handleOnRequestESC} zIndex=\"6000\">\n        <p>Close by clicking the overlay or pressing the ESC key.</p>\n      </Overlay>\n    );\n  }\n\n  render() {\n    return (\n      <OverlayContainer className={cx('overlay-container')} overlay={this.addOverlay()}>\n        <Button text=\"Trigger Container Overlay\" onClick={this.handleTriggerOverlay} />\n        <Button text=\"Trigger FullScreen Overlay\" onClick={this.handleTriggerFullScreenOverlay} />\n      </OverlayContainer>\n    );\n  }\n}\n\nexport default OverlayExample;\n"},2545:function(e,t,n){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=c(n(0)),a=c(n(274)),l=c(n(168)),i=c(n(50)),s=c(n(4)),d=c(n(1511));function c(e){return e&&e.__esModule?e:{default:e}}function p(e){return(p="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(e){return o(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":o(e)})(e)}function u(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var f=s.default.bind(d.default),g=function(e){function t(){var e,n,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,(e=!(o=m(t).call(this))||"object"!==p(o)&&"function"!=typeof o?y(n):o).state={show:!1},e.handleTriggerOverlay=e.handleTriggerOverlay.bind(y(e)),e.handleTriggerFullScreenOverlay=e.handleTriggerFullScreenOverlay.bind(y(e)),e}var n,o,s;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}(t,e),n=t,(o=[{key:"handleTriggerOverlay",value:function(){var e=this;this.setState({show:!0,isRelativeToContainer:!0}),setTimeout((function(){e.setState({show:!1})}),5e3)}},{key:"handleTriggerFullScreenOverlay",value:function(){var e=this;this.setState({show:!0,isRelativeToContainer:!1}),setTimeout((function(){e.setState({show:!1})}),5e3)}},{key:"addLoadingOverlay",value:function(){return r.default.createElement(a.default,{isOpen:this.state.show,isAnimated:!0,isRelativeToContainer:this.state.isRelativeToContainer,zIndex:"6000"})}},{key:"render",value:function(){return r.default.createElement(l.default,{className:f("overlay-container"),overlay:this.addLoadingOverlay()},r.default.createElement(i.default,{text:"Trigger Container Overlay",onClick:this.handleTriggerOverlay}),r.default.createElement(i.default,{text:"Trigger FullScreen Overlay",onClick:this.handleTriggerFullScreenOverlay}))}}])&&u(n.prototype,o),s&&u(n,s),t}(r.default.Component);t.default=g},2546:function(e,t,n){"use strict";n.r(t),t.default="import React from 'react';\nimport LoadingOverlay from 'terra-overlay/lib/LoadingOverlay';\nimport OverlayContainer from 'terra-overlay/lib/OverlayContainer';\nimport Button from 'terra-button';\nimport classNames from 'classnames/bind';\nimport styles from './OverlayDocCommon.module.scss';\n\nconst cx = classNames.bind(styles);\n\nclass OverlayExample extends React.Component {\n  constructor() {\n    super();\n\n    this.state = { show: false };\n    this.handleTriggerOverlay = this.handleTriggerOverlay.bind(this);\n    this.handleTriggerFullScreenOverlay = this.handleTriggerFullScreenOverlay.bind(this);\n  }\n\n  handleTriggerOverlay() {\n    this.setState({ show: true, isRelativeToContainer: true });\n\n    setTimeout(() => {\n      this.setState({ show: false });\n    }, 5000);\n  }\n\n  handleTriggerFullScreenOverlay() {\n    this.setState({ show: true, isRelativeToContainer: false });\n\n    setTimeout(() => {\n      this.setState({ show: false });\n    }, 5000);\n  }\n\n  addLoadingOverlay() {\n    return (\n      <LoadingOverlay isOpen={this.state.show} isAnimated isRelativeToContainer={this.state.isRelativeToContainer} zIndex=\"6000\" />\n    );\n  }\n\n  render() {\n    return (\n      <OverlayContainer className={cx('overlay-container')} overlay={this.addLoadingOverlay()}>\n        <Button text=\"Trigger Container Overlay\" onClick={this.handleTriggerOverlay} />\n        <Button text=\"Trigger FullScreen Overlay\" onClick={this.handleTriggerFullScreenOverlay} />\n      </OverlayContainer>\n    );\n  }\n}\n\nexport default OverlayExample;\n"},3028:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=g(n(0)),r=g(n(799)),a=g(n(2535)),l=n(2536),i=g(n(2537)),s=g(n(2538)),d=g(n(2539)),c=g(n(2540)),p=g(n(2541)),u=g(n(2542)),m=g(n(2543)),y=g(n(2544)),h=g(n(2545)),f=g(n(2546));function g(e){return e&&e.__esModule?e:{default:e}}var v=function(){return o.default.createElement(r.default,{packageName:l.name,packageVersion:l.version,readme:a.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/".concat(l.name),examples:[{title:"Overlay",example:o.default.createElement(m.default,null),source:y.default},{title:"Loading Overlay",example:o.default.createElement(h.default,null),source:f.default}],propsTables:[{componentName:"Overlay",componentSrc:c.default,componentProps:d.default},{componentName:"Overlay Container",componentSrc:u.default,componentProps:p.default},{componentName:"Loading Overlay",componentSrc:s.default,componentProps:i.default}]})};t.default=v},797:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=l(n(0)),r=l(n(4)),a=l(n(798));function l(e){return e&&e.__esModule?e:{default:e}}var i=r.default.bind(a.default),s=function(e){var t=e.packageName,n=e.packageUrl,r=e.packageVersion;return r?o.default.createElement("div",{className:i("badge-container")},o.default.createElement("a",{className:i("badge"),href:n||"https://www.npmjs.org/package/".concat(t,"/v/").concat(r)},o.default.createElement("span",{className:i("badge-name")},n?"package":"npm"),o.default.createElement("span",{className:i("badge-version")},"v".concat(r)))):o.default.createElement("a",{href:"https://www.npmjs.org/package/".concat(t)},o.default.createElement("img",{src:"https://badgen.net/npm/v/".concat(t),alt:"NPM version"}))};t.default=s},798:function(e,t,n){e.exports={badge:"NpmBadge-module__badge___1Cu7Z","badge-container":"NpmBadge-module__badge-container___2zgQi","badge-name":"NpmBadge-module__badge-name___17OzL","badge-version":"NpmBadge-module__badge-version___2Vkei"}},799:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o=p(n(0)),r=p(n(2)),a=p(n(805)),l=p(n(804)),i=p(n(4)),s=p(n(797)),d=p(n(800)),c=p(n(803));function p(e){return e&&e.__esModule?e:{default:e}}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}function m(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var y=i.default.bind(c.default),h={children:r.default.node,packageName:r.default.string,packageUrl:r.default.string,packageVersion:r.default.string,readme:r.default.string,srcPath:r.default.string,examples:r.default.arrayOf(r.default.shape({title:r.default.string,description:r.default.node,example:r.default.element,source:r.default.string})),propsTables:r.default.arrayOf(r.default.shape({componentSrc:r.default.string,componentName:r.default.string,componentProps:r.default.string,propsResolution:r.default.string}))},f=function(e){var t,n=e.packageName,r=e.packageVersion,i=e.packageUrl,c=e.readme,p=e.srcPath,h=e.examples,f=e.propsTables,g=e.children,v=m(e,["packageName","packageVersion","packageUrl","readme","srcPath","examples","propsTables","children"]),b=h;f&&(t=f);for(var O=0,w=0;w<b.length;w+=1)b[w].id=O,O+=1;if(t)for(var T=0;T<t.length;T+=1)t[T].id=O,O+=1;var S,C=y(["doc-template",v.className]);if(b.length>0){var x=b.length>1?"Examples":"Example";S=o.default.createElement("h1",{className:y("examples-header")},x)}var _=o.default.createElement(s.default,{packageName:n,packageUrl:i,packageVersion:r});return o.default.createElement("div",u({},v,{className:C}),o.default.createElement("div",{className:y("doc-card")},n&&_,c&&o.default.createElement(l.default,{src:c}),p&&o.default.createElement("a",{href:p},"View component source code")),S,b.map((function(e){return o.default.createElement(d.default,{title:e.title,example:e.example,exampleSrc:e.source,description:e.description,key:e.id})})),o.default.createElement("div",{className:y("doc-card")},f[0]&&f[0].componentProps?t.map((function(e){return o.default.createElement("div",{className:y("props-table-markdown"),key:e.id},o.default.createElement("h2",null,e.componentName," Props"),o.default.createElement(l.default,{src:e.componentProps}))})):t.map((function(e){return o.default.createElement(a.default,{src:e.componentSrc,componentName:e.componentName,key:e.id,propsResolution:e.propsResolution})}))),g&&o.default.createElement("div",{className:y("doc-card")},g))};f.propTypes=h,f.defaultProps={packageName:"",packageUrl:"",packageVersion:"",readme:"",srcPath:"",examples:[],propsTables:[]};var g=f;t.default=g},800:function(e,t,n){"use strict";function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=p(n(0)),a=p(n(2)),l=p(n(806)),i=p(n(807)),s=p(n(4)),d=p(n(801)),c=p(n(802));function p(e){return e&&e.__esModule?e:{default:e}}function u(e){return(u="function"==typeof Symbol&&"symbol"===o(Symbol.iterator)?function(e){return o(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":o(e)})(e)}function m(){return(m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}function y(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}function h(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function f(e){return(f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function g(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}l.default.registerLanguage("jsx",i.default);var b=s.default.bind(d.default),O={example:a.default.element,exampleSrc:a.default.string,title:a.default.string,description:a.default.node,children:a.default.element},w={example:void 0,exampleSrc:void 0,title:void 0,description:void 0,children:void 0},T=function(e){function t(e){var n,o,r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),o=this,(n=!(r=f(t).call(this,e))||"object"!==u(r)&&"function"!=typeof r?g(o):r).state={isExpanded:!1,isBackgroundTransparent:!1},n.handleBgToggle=n.handleBgToggle.bind(g(n)),n.handleCodeToggle=n.handleCodeToggle.bind(g(n)),n}var n,o,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(t,e),n=t,(o=[{key:"handleBgToggle",value:function(){this.setState((function(e){return{isBackgroundTransparent:!e.isBackgroundTransparent}}))}},{key:"handleCodeToggle",value:function(){this.setState((function(e){return{isExpanded:!e.isExpanded}}))}},{key:"render",value:function(){var e=this.props,t=e.title,n=e.example,o=e.exampleSrc,a=e.children,i=e.description,s=y(e,["title","example","exampleSrc","children","description"]),d=this.state,p=d.isExpanded,u={};return d.isBackgroundTransparent&&(u={backgroundColor:"rgba(0, 0, 0, 0)"}),r.default.createElement("div",m({},s,{className:b("template",s.className)}),t&&r.default.createElement("div",{className:b("header")},r.default.createElement("h2",{className:b("title")},t)),r.default.createElement("div",{className:b("content"),style:u},i&&r.default.createElement("div",{className:b("description")},i),n,a),o&&r.default.createElement("div",{className:b("footer")},r.default.createElement("div",{className:b("button-container")},r.default.createElement("button",{type:"button",className:b("bg-toggle"),onClick:this.handleBgToggle},"Toggle Background"),r.default.createElement("button",{type:"button",className:b("code-toggle"),onClick:this.handleCodeToggle},r.default.createElement("span",{className:b("chevron-left")}),r.default.createElement("span",null,"Code"),r.default.createElement("span",{className:b("chevron-right")}))),r.default.createElement("div",{className:b("code",{"is-expanded":p}),"aria-hidden":!p},p?r.default.createElement(l.default,{language:"jsx",style:c.default,customStyle:{margin:"0",borderRadius:"0"}},o):void 0)))}}])&&h(n.prototype,o),a&&h(n,a),t}(r.default.Component);T.propTypes=O,T.defaultProps=w;var S=T;t.default=S},801:function(e,t,n){e.exports={template:"ExampleTemplate-module__template___MEAKz",header:"ExampleTemplate-module__header___13zqD",content:"ExampleTemplate-module__content___1Zdto",description:"ExampleTemplate-module__description___pnaPA",footer:"ExampleTemplate-module__footer___2jmFy","button-container":"ExampleTemplate-module__button-container___2JIjW",code:"ExampleTemplate-module__code___1u1x4","is-expanded":"ExampleTemplate-module__is-expanded___2fXEU","bg-toggle":"ExampleTemplate-module__bg-toggle___1rE0y","code-toggle":"ExampleTemplate-module__code-toggle___1B459","chevron-left":"ExampleTemplate-module__chevron-left___2hjZu","chevron-right":"ExampleTemplate-module__chevron-right___fnHrn",title:"ExampleTemplate-module__title___1qQfE"}},802:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var o="#D8DEE9",r="#B2B2B2",a="#c5a5c5",l="#5a9bcf",i="#8dc891",s="#d7deea",d="#FAC863",c={'code[class*="language-"]':{color:"#f8f8f2",background:"none",textShadow:"0 1px rgba(0, 0, 0, 0.3)",fontFamily:'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"#fff",background:"rgb(40, 44, 52)",textShadow:"0 1px rgba(0, 0, 0, 0.3)",fontFamily:'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",padding:"1em",margin:".5em 0",overflow:"auto",borderRadius:"0.3em"},':not(pre) > code[class*="language-"]':{background:"rgb(40, 44, 52)",padding:".1em",borderRadius:".3em",whiteSpace:"normal"},"plain-text":{color:"#ffffff"},"attr-name":{color:a},comment:{color:r},"block-comment":{color:r},prolog:{color:r},doctype:{color:r},cdata:{color:r},property:{color:l},number:{color:l},"function-name":{color:l},constant:{color:l},symbol:{color:l},deleted:{color:l},boolean:{color:"#ff8b50"},tag:{color:"#fc929e"},string:{color:i},punctuation:{color:"#88C6BE"},selector:{color:o},char:{color:o},builtin:{color:o},inserted:{color:o},function:{color:"#79b6f2"},operator:{color:s},entity:{color:s,cursor:"help"},url:{color:s},".language-css .token.string":{color:s},".style .token.string":{color:s},variable:{color:s},"attr-value":{color:i},keyword:{color:a},"at-rule":{color:d},"class-name":{color:d},important:{fontWeight:400},bold:{fontWeight:700},italic:{fontStyle:"italic"},".namespace":{opacity:.7}};t.default=c},803:function(e,t,n){e.exports={"examples-header":"DocTemplate-module__examples-header___P3qFL","doc-template":"DocTemplate-module__doc-template___JSxEJ","doc-card":"DocTemplate-module__doc-card___2jEVe","props-table-markdown":"DocTemplate-module__props-table-markdown___1926W"}}}]);
//# sourceMappingURL=115-d700d75b956a05a3853b.js.map