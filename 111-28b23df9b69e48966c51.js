(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{2186:function(e,t,l){"use strict";l.r(t),t.default="# Terra Form Select Field\n\nA convenience wrapper assembling a [terra-form-select](https://github.com/cerner/terra-core/tree/master/packages/terra-form-select) within a [terra-form-field](https://github.com/cerner/terra-core/tree/master/packages/terra-form-field).\n\n## Getting Started\n\n- Install with [npmjs](https://www.npmjs.com):\n  - `npm install terra-form-select`\n\n## Component Features\n\n- [Cross-Browser Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#cross-browser-support)\n- [Responsive Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#responsive-support)\n- [Mobile Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#mobile-support)\n- [Internationalization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n- [Localization Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#internationalization-i18n-support)\n- [LTR/RTL Support](https://github.com/cerner/terra-ui/blob/master/src/terra-dev-site/contributing/ComponentStandards.e.contributing.md#ltr--rtl-support)\n"},2187:function(e,t){e.exports='<table style="display: table; margin-bottom: 1.25rem"><thead><tr style="line-height: 1.5"><th style="width: 10%">Prop Name</th><th style="width: 25%">Type</th><th style="width: 10%">Is Required</th><th style="width: 10%">Default Value</th><th style="width: 45%">Description</th></tr></thead><tbody><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">allowClear</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether a clear option is available to clear the selection.\nThis is not applicable to the <code style="white-space: pre-wrap">multiple</code> or <code>tag</code> variants since the selection can already be deselected using the tag.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">children</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The select options.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">label</td><td style="padding-bottom: 1.8rem">node</td><td style="color: #d53700; padding-bottom: 1.8rem">required</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">The field label.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">defaultValue</td><td style="padding-bottom: 1.8rem">union</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The default value of the select. Can be a string, number, or array of strings/numbers.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">disabled</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the input is disabled.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">error</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Error message displayed when the select is invalid.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">help</td><td style="padding-bottom: 1.8rem">node</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Help message to display with the select.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">hideRequired</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether to hide the required indicator on the label.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isIncomplete</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the field displays as Incomplete. Use when no value has been provided. <em>(usage note: <code style="white-space: pre-wrap">required</code> must also be set)</em>.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isInline</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the field is displayed inline. Displays block by default.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isInvalid</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the field displays as Invalid. Use when value does not meet validation pattern.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isLabelHidden</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the label is hidden. Allows hiding the label while meeting accessibility guidelines.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">isTouchAccessible</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Ensure accessibility on touch devices. Will render the dropdown menu in\nnormal DOM flow with position absolute. By default, the menu renders in a\nportal, which is inaccessible on touch devices. Only applicable to variants\nthat include an input (e.g. <code style="white-space: pre-wrap">combobox</code>, <code>multiple</code>, <code>search</code>, and <code>tag</code>).</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">labelAttrs</td><td style="padding-bottom: 1.8rem">object</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">{}</td><td style="padding-bottom: 1.8rem">Additional attributes to spread onto the label.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">maxSelectionCount</td><td style="padding-bottom: 1.8rem">number</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The maximum number of options that can be selected. A value less than 2 will be ignored.\nOnly applicable to variants allowing multiple selections (e.g.; <code style="white-space: pre-wrap">multiple</code>; <code>tag</code>).</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">maxWidth</td><td style="padding-bottom: 1.8rem">string</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Set the max-width of a field using <code style="white-space: pre-wrap">length</code> or <code>%</code>.  Best practice recommendation to never exceed\na rendered value of 1020px. <em>(Note: Providing custom inline styles will take precedence.)</em></td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">onChange</td><td style="padding-bottom: 1.8rem">func</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Callback function triggered when the select value changes. function(value)</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">placeholder</td><td style="padding-bottom: 1.8rem">string</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">Placeholder text.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">required</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether the field is required.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">selectAttrs</td><td style="padding-bottom: 1.8rem">object</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">{}</td><td style="padding-bottom: 1.8rem">Additional attributes to spread onto the select.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">selectId</td><td style="padding-bottom: 1.8rem">string</td><td style="color: #d53700; padding-bottom: 1.8rem">required</td><td style="font-weight: bold; padding-bottom: 1.8rem">none</td><td style="padding-bottom: 1.8rem">The Select identifier. Links the htmlFor of the field to the select identifier.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">showOptional</td><td style="padding-bottom: 1.8rem">bool</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">false</td><td style="padding-bottom: 1.8rem">Whether to append the &#39;optional&#39; label to a non-required field label.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">value</td><td style="padding-bottom: 1.8rem">union</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">undefined</td><td style="padding-bottom: 1.8rem">The value of the select. Can be a string, number, or array of strings/numbers.</td></tr><tr style="vertical-align: top"><td style="font-weight: bold; padding-bottom: 1.8rem">variant</td><td style="padding-bottom: 1.8rem">enum</td><td style="padding-bottom: 1.8rem">optional</td><td style="font-weight: bold; padding-bottom: 1.8rem">\'default\'</td><td style="padding-bottom: 1.8rem">The select variant. One of <code style="white-space: pre-wrap">default</code>, <code>combobox</code>, <code>multiple</code>, <code>tag</code>, or <code>search</code>.</td></tr></tbody></table>'},2188:function(e,t,l){"use strict";l.r(t),t.default="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, intlShape } from 'react-intl';\nimport Field from 'terra-form-field';\nimport Select from './Select';\nimport Variants from './shared/_variants';\n\nconst propTypes = {\n  /**\n   * Whether a clear option is available to clear the selection.\n   * This is not applicable to the `multiple` or `tag` variants since the selection can already be deselected using the tag.\n   */\n  allowClear: PropTypes.bool,\n  /**\n   * The select options.\n   */\n  children: PropTypes.node,\n  /**\n   * The field label.\n   */\n  label: PropTypes.node.isRequired,\n  /**\n   * The default value of the select. Can be a string, number, or array of strings/numbers.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.array, PropTypes.number, PropTypes.string]),\n  /**\n   * Whether the input is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Error message displayed when the select is invalid.\n   */\n  error: PropTypes.node,\n  /**\n   * Help message to display with the select.\n   */\n  help: PropTypes.node,\n  /**\n   * Whether to hide the required indicator on the label.\n   */\n  hideRequired: PropTypes.bool,\n  /**\n   * @private\n   * The intl object containing translations. This is retrieved from the context automatically by injectIntl.\n   */\n  intl: intlShape.isRequired,\n  /**\n   * Whether the field displays as Incomplete. Use when no value has been provided. _(usage note: `required` must also be set)_.\n   */\n  isIncomplete: PropTypes.bool,\n  /**\n   * Whether the field is displayed inline. Displays block by default.\n   */\n  isInline: PropTypes.bool,\n  /**\n   * Whether the field displays as Invalid. Use when value does not meet validation pattern.\n   */\n  isInvalid: PropTypes.bool,\n  /**\n   * Whether the label is hidden. Allows hiding the label while meeting accessibility guidelines.\n   */\n  isLabelHidden: PropTypes.bool,\n  /**\n   * Ensure accessibility on touch devices. Will render the dropdown menu in\n   * normal DOM flow with position absolute. By default, the menu renders in a\n   * portal, which is inaccessible on touch devices. Only applicable to variants\n   * that include an input (e.g. `combobox`, `multiple`, `search`, and `tag`).\n   */\n  isTouchAccessible: PropTypes.bool,\n  /**\n   * Additional attributes to spread onto the label.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  labelAttrs: PropTypes.object,\n  /**\n   * The maximum number of options that can be selected. A value less than 2 will be ignored.\n   * Only applicable to variants allowing multiple selections (e.g.; `multiple`; `tag`).\n   */\n  maxSelectionCount: PropTypes.number,\n  /**\n   * Set the max-width of a field using `length` or `%`.  Best practice recommendation to never exceed\n   * a rendered value of 1020px. _(Note: Providing custom inline styles will take precedence.)_\n   */\n  maxWidth: PropTypes.string,\n  /**\n   * Callback function triggered when the select value changes. function(value)\n   */\n  onChange: PropTypes.func,\n  /**\n   * Placeholder text.\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Whether the field is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * Additional attributes to spread onto the select.\n   */\n  // eslint-disable-next-line react/forbid-prop-types\n  selectAttrs: PropTypes.object,\n  /**\n   * The Select identifier. Links the htmlFor of the field to the select identifier.\n   */\n  selectId: PropTypes.string.isRequired,\n  /**\n   * Whether to append the 'optional' label to a non-required field label.\n   */\n  showOptional: PropTypes.bool,\n  /**\n   * The value of the select. Can be a string, number, or array of strings/numbers.\n   */\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.number, PropTypes.string]),\n  /**\n   * The select variant. One of `default`, `combobox`, `multiple`, `tag`, or `search`.\n   */\n  variant: PropTypes.oneOf([\n    Variants.COMBOBOX,\n    Variants.DEFAULT,\n    Variants.MULTIPLE,\n    Variants.SEARCH,\n    Variants.TAG,\n  ]),\n};\n\nconst defaultProps = {\n  allowClear: false,\n  children: undefined,\n  defaultValue: undefined,\n  disabled: false,\n  error: undefined,\n  help: undefined,\n  hideRequired: false,\n  isIncomplete: false,\n  isInline: false,\n  isInvalid: false,\n  isLabelHidden: false,\n  isTouchAccessible: false,\n  labelAttrs: {},\n  maxSelectionCount: undefined,\n  maxWidth: undefined,\n  onChange: undefined,\n  placeholder: undefined,\n  required: false,\n  selectAttrs: {},\n  showOptional: false,\n  value: undefined,\n  variant: 'default',\n};\n\nconst SelectField = ({\n  allowClear,\n  children,\n  defaultValue,\n  disabled,\n  error,\n  help,\n  hideRequired,\n  intl,\n  isIncomplete,\n  isInline,\n  isInvalid,\n  isLabelHidden,\n  isTouchAccessible,\n  label,\n  labelAttrs,\n  maxSelectionCount,\n  maxWidth,\n  onChange,\n  placeholder,\n  required,\n  selectAttrs,\n  selectId,\n  showOptional,\n  value,\n  variant,\n  ...customProps\n}) => {\n  let helpText = help;\n  if (maxSelectionCount !== undefined && maxSelectionCount >= 2) {\n    const limitSelectionText = intl.formatMessage({ id: 'Terra.form.select.maxSelectionHelp' }, { text: maxSelectionCount });\n\n    if (help) {\n      helpText = (\n        <span>\n          {limitSelectionText}\n          {' '}\n          {help}\n        </span>\n      );\n    } else {\n      helpText = limitSelectionText;\n    }\n  }\n\n  let ariaDescriptionIds;\n\n  if (help && error && isInvalid) {\n    ariaDescriptionIds = `${selectId}-error ${selectId}-help`;\n  } else {\n    if (help) {\n      ariaDescriptionIds = `${selectId}-help`;\n    }\n\n    if (error && isInvalid) {\n      ariaDescriptionIds = `${selectId}-error`;\n    }\n  }\n\n  return (\n    <Field\n      {...customProps}\n      label={label}\n      labelAttrs={labelAttrs}\n      error={error}\n      help={helpText}\n      hideRequired={hideRequired}\n      required={required}\n      showOptional={showOptional}\n      isInvalid={isInvalid}\n      isInline={isInline}\n      isLabelHidden={isLabelHidden}\n      htmlFor={selectId}\n      maxWidth={maxWidth}\n    >\n      <Select\n        {...selectAttrs}\n        ariaLabel={label}\n        allowClear={allowClear}\n        aria-describedby={ariaDescriptionIds}\n        disabled={selectAttrs.disabled || disabled}\n        id={selectId}\n        isIncomplete={isIncomplete}\n        isInvalid={isInvalid}\n        isTouchAccessible={isTouchAccessible}\n        defaultValue={defaultValue}\n        maxSelectionCount={maxSelectionCount !== undefined && maxSelectionCount < 2 ? undefined : maxSelectionCount}\n        onChange={onChange}\n        placeholder={placeholder}\n        required={required}\n        value={value}\n        variant={variant}\n      >\n        {children}\n      </Select>\n    </Field>\n  );\n};\n\nSelectField.propTypes = propTypes;\nSelectField.defaultProps = defaultProps;\nSelectField.Option = Select.Option;\nSelectField.OptGroup = Select.OptGroup;\n\nexport default injectIntl(SelectField);\n"},2189:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(266)),o=r(l(4)),d=r(l(809));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{help:"Shades of blue and green.",label:"Colors",maxSelectionCount:3,placeholder:"Select a size",selectId:"max-selection-field",variant:"multiple",className:i("form-select")},n.default.createElement(a.default.OptGroup,{label:"Shades of Blue"},n.default.createElement(a.default.Option,{value:"blue",display:"Blue"}),n.default.createElement(a.default.Option,{value:"cyan",display:"Cyan"}),n.default.createElement(a.default.Option,{disabled:!0,value:"teal",display:"Teal"}),n.default.createElement(a.default.Option,{value:"azul",display:"Azul"}),n.default.createElement(a.default.Option,{value:"aqua",display:"Aqua"})),n.default.createElement(a.default.OptGroup,{label:"Shades of Green"},n.default.createElement(a.default.Option,{value:"green",display:"Green"}),n.default.createElement(a.default.Option,{value:"forest",display:"Forest Green"}),n.default.createElement(a.default.Option,{disabled:!0,value:"dark",display:"Dark Green"}),n.default.createElement(a.default.Option,{value:"neon",display:"Neon Green"}),n.default.createElement(a.default.Option,{value:"emerald",display:"Emerald"})))};t.default=s},2190:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport SelectField from \'terra-form-select/lib/SelectField\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst MaxSelectionExample = () => (\n  <SelectField help="Shades of blue and green." label="Colors" maxSelectionCount={3} placeholder="Select a size" selectId="max-selection-field" variant="multiple" className={cx(\'form-select\')}>\n    <SelectField.OptGroup label="Shades of Blue">\n      <SelectField.Option value="blue" display="Blue" />\n      <SelectField.Option value="cyan" display="Cyan" />\n      <SelectField.Option disabled value="teal" display="Teal" />\n      <SelectField.Option value="azul" display="Azul" />\n      <SelectField.Option value="aqua" display="Aqua" />\n    </SelectField.OptGroup>\n    <SelectField.OptGroup label="Shades of Green">\n      <SelectField.Option value="green" display="Green" />\n      <SelectField.Option value="forest" display="Forest Green" />\n      <SelectField.Option disabled value="dark" display="Dark Green" />\n      <SelectField.Option value="neon" display="Neon Green" />\n      <SelectField.Option value="emerald" display="Emerald" />\n    </SelectField.OptGroup>\n  </SelectField>\n);\n\nexport default MaxSelectionExample;\n'},2191:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(266)),o=r(l(4)),d=r(l(809));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{label:"T-shirt size",placeholder:"Select a size",selectId:"tshirt-size-field-3",className:i("form-select")},n.default.createElement(a.default.Option,{value:"xSmall",display:"Extra Small"}),n.default.createElement(a.default.Option,{value:"small",display:"Small"}),n.default.createElement(a.default.Option,{value:"medium",display:"Medium"}),n.default.createElement(a.default.Option,{value:"large",display:"Large"}),n.default.createElement(a.default.Option,{value:"xLarge",display:"Extra Large"}))};t.default=s},2192:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport SelectField from \'terra-form-select/lib/SelectField\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst SelectFieldExample = () => (\n  <SelectField label="T-shirt size" placeholder="Select a size" selectId="tshirt-size-field-3" className={cx(\'form-select\')}>\n    <SelectField.Option value="xSmall" display="Extra Small" />\n    <SelectField.Option value="small" display="Small" />\n    <SelectField.Option value="medium" display="Medium" />\n    <SelectField.Option value="large" display="Large" />\n    <SelectField.Option value="xLarge" display="Extra Large" />\n  </SelectField>\n);\n\nexport default SelectFieldExample;\n'},2193:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(266)),o=r(l(4)),d=r(l(809));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{label:"T-shirt size",placeholder:"Select a size",selectId:"tshirt-size-field-2",required:!0,className:i("form-select")},n.default.createElement(a.default.Option,{value:"xSmall",display:"Extra Small"}),n.default.createElement(a.default.Option,{value:"small",display:"Small"}),n.default.createElement(a.default.Option,{value:"medium",display:"Medium"}),n.default.createElement(a.default.Option,{value:"large",display:"Large"}),n.default.createElement(a.default.Option,{value:"xLarge",display:"Extra Large"}))};t.default=s},2194:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport SelectField from \'terra-form-select/lib/SelectField\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst SelectFieldExample = () => (\n  <SelectField label="T-shirt size" placeholder="Select a size" selectId="tshirt-size-field-2" required className={cx(\'form-select\')}>\n    <SelectField.Option value="xSmall" display="Extra Small" />\n    <SelectField.Option value="small" display="Small" />\n    <SelectField.Option value="medium" display="Medium" />\n    <SelectField.Option value="large" display="Large" />\n    <SelectField.Option value="xLarge" display="Extra Large" />\n  </SelectField>\n);\n\nexport default SelectFieldExample;\n'},2195:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=r(l(0)),a=r(l(266)),o=r(l(4)),d=r(l(809));function r(e){return e&&e.__esModule?e:{default:e}}var i=o.default.bind(d.default),s=function(){return n.default.createElement(a.default,{required:!0,isIncomplete:!0,label:"T-shirt size",placeholder:"Select a size",selectId:"tshirt-size-field-1",className:i("form-select")},n.default.createElement(a.default.Option,{value:"xSmall",display:"Extra Small"}),n.default.createElement(a.default.Option,{value:"small",display:"Small"}),n.default.createElement(a.default.Option,{value:"medium",display:"Medium"}),n.default.createElement(a.default.Option,{value:"large",display:"Large"}),n.default.createElement(a.default.Option,{value:"xLarge",display:"Extra Large"}))};t.default=s},2196:function(e,t,l){"use strict";l.r(t),t.default='import React from \'react\';\nimport SelectField from \'terra-form-select/lib/SelectField\';\nimport classNames from \'classnames/bind\';\nimport styles from \'../FormSelectDocCommon.module.scss\';\n\nconst cx = classNames.bind(styles);\n\nconst SelectFieldExample = () => (\n  <SelectField required isIncomplete label="T-shirt size" placeholder="Select a size" selectId="tshirt-size-field-1" className={cx(\'form-select\')}>\n    <SelectField.Option value="xSmall" display="Extra Small" />\n    <SelectField.Option value="small" display="Small" />\n    <SelectField.Option value="medium" display="Medium" />\n    <SelectField.Option value="large" display="Large" />\n    <SelectField.Option value="xLarge" display="Extra Large" />\n  </SelectField>\n);\n\nexport default SelectFieldExample;\n'},2981:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=h(l(0)),a=h(l(799)),o=h(l(2186)),d=l(828),r=h(l(2187)),i=h(l(2188)),s=h(l(2189)),c=h(l(2190)),p=h(l(2191)),m=h(l(2192)),u=h(l(2193)),f=h(l(2194)),b=h(l(2195)),g=h(l(2196));function h(e){return e&&e.__esModule?e:{default:e}}var y=function(){return n.default.createElement(a.default,{packageName:d.name,packageVersion:d.version,readme:o.default,srcPath:"https://github.com/cerner/terra-core/tree/master/packages/".concat(d.name),propsTables:[{componentName:"Select Field",componentSrc:i.default,componentProps:r.default}],examples:[{title:"Select Field Example",example:n.default.createElement(p.default,null),source:m.default},{title:"Required Select Field Example",example:n.default.createElement(u.default,null),source:f.default},{title:"Maximum Selection (applies to only 'multiple' and 'tag')",description:"A multiple selection variant that allows up to a set number of selections. (Not applicable to  'default', 'combobox', and 'search' variants)",example:n.default.createElement(s.default,null),source:c.default},{title:"Incomplete Select Field Example",description:"Applies theme-specific styling for incomplete. ***Note: Only use incomplete if given specific guidance, reserved for specific applications when no value has been provided. Not for general use.***",example:n.default.createElement(b.default,null),source:g.default}]})};t.default=y},797:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=d(l(0)),a=d(l(4)),o=d(l(798));function d(e){return e&&e.__esModule?e:{default:e}}var r=a.default.bind(o.default),i=function(e){var t=e.packageName,l=e.packageUrl,a=e.packageVersion;return a?n.default.createElement("div",{className:r("badge-container")},n.default.createElement("a",{className:r("badge"),href:l||"https://www.npmjs.org/package/".concat(t,"/v/").concat(a)},n.default.createElement("span",{className:r("badge-name")},l?"package":"npm"),n.default.createElement("span",{className:r("badge-version")},"v".concat(a)))):n.default.createElement("a",{href:"https://www.npmjs.org/package/".concat(t)},n.default.createElement("img",{src:"https://badgen.net/npm/v/".concat(t),alt:"NPM version"}))};t.default=i},798:function(e,t,l){e.exports={badge:"NpmBadge-module__badge___1Cu7Z","badge-container":"NpmBadge-module__badge-container___2zgQi","badge-name":"NpmBadge-module__badge-name___17OzL","badge-version":"NpmBadge-module__badge-version___2Vkei"}},799:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=p(l(0)),a=p(l(2)),o=p(l(805)),d=p(l(804)),r=p(l(4)),i=p(l(797)),s=p(l(800)),c=p(l(803));function p(e){return e&&e.__esModule?e:{default:e}}function m(){return(m=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e}).apply(this,arguments)}function u(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)l=o[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)l=o[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var f=r.default.bind(c.default),b={children:a.default.node,packageName:a.default.string,packageUrl:a.default.string,packageVersion:a.default.string,readme:a.default.string,srcPath:a.default.string,examples:a.default.arrayOf(a.default.shape({title:a.default.string,description:a.default.node,example:a.default.element,source:a.default.string})),propsTables:a.default.arrayOf(a.default.shape({componentSrc:a.default.string,componentName:a.default.string,componentProps:a.default.string,propsResolution:a.default.string}))},g=function(e){var t,l=e.packageName,a=e.packageVersion,r=e.packageUrl,c=e.readme,p=e.srcPath,b=e.examples,g=e.propsTables,h=e.children,y=u(e,["packageName","packageVersion","packageUrl","readme","srcPath","examples","propsTables","children"]),v=b;g&&(t=g);for(var S=0,x=0;x<v.length;x+=1)v[x].id=S,S+=1;if(t)for(var w=0;w<t.length;w+=1)t[w].id=S,S+=1;var _,E=f(["doc-template",y.className]);if(v.length>0){var O=v.length>1?"Examples":"Example";_=n.default.createElement("h1",{className:f("examples-header")},O)}var T=n.default.createElement(i.default,{packageName:l,packageUrl:r,packageVersion:a});return n.default.createElement("div",m({},y,{className:E}),n.default.createElement("div",{className:f("doc-card")},l&&T,c&&n.default.createElement(d.default,{src:c}),p&&n.default.createElement("a",{href:p},"View component source code")),_,v.map((function(e){return n.default.createElement(s.default,{title:e.title,example:e.example,exampleSrc:e.source,description:e.description,key:e.id})})),n.default.createElement("div",{className:f("doc-card")},g[0]&&g[0].componentProps?t.map((function(e){return n.default.createElement("div",{className:f("props-table-markdown"),key:e.id},n.default.createElement("h2",null,e.componentName," Props"),n.default.createElement(d.default,{src:e.componentProps}))})):t.map((function(e){return n.default.createElement(o.default,{src:e.componentSrc,componentName:e.componentName,key:e.id,propsResolution:e.propsResolution})}))),h&&n.default.createElement("div",{className:f("doc-card")},h))};g.propTypes=b,g.defaultProps={packageName:"",packageUrl:"",packageVersion:"",readme:"",srcPath:"",examples:[],propsTables:[]};var h=g;t.default=h},800:function(e,t,l){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=p(l(0)),o=p(l(2)),d=p(l(806)),r=p(l(807)),i=p(l(4)),s=p(l(801)),c=p(l(802));function p(e){return e&&e.__esModule?e:{default:e}}function m(e){return(m="function"==typeof Symbol&&"symbol"===n(Symbol.iterator)?function(e){return n(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":n(e)})(e)}function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e}).apply(this,arguments)}function f(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)l=o[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)l=o[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}function b(e,t){for(var l=0;l<t.length;l++){var n=t[l];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function y(e,t){return(y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}d.default.registerLanguage("jsx",r.default);var v=i.default.bind(s.default),S={example:o.default.element,exampleSrc:o.default.string,title:o.default.string,description:o.default.node,children:o.default.element},x={example:void 0,exampleSrc:void 0,title:void 0,description:void 0,children:void 0},w=function(e){function t(e){var l,n,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,(l=!(a=g(t).call(this,e))||"object"!==m(a)&&"function"!=typeof a?h(n):a).state={isExpanded:!1,isBackgroundTransparent:!1},l.handleBgToggle=l.handleBgToggle.bind(h(l)),l.handleCodeToggle=l.handleCodeToggle.bind(h(l)),l}var l,n,o;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}(t,e),l=t,(n=[{key:"handleBgToggle",value:function(){this.setState((function(e){return{isBackgroundTransparent:!e.isBackgroundTransparent}}))}},{key:"handleCodeToggle",value:function(){this.setState((function(e){return{isExpanded:!e.isExpanded}}))}},{key:"render",value:function(){var e=this.props,t=e.title,l=e.example,n=e.exampleSrc,o=e.children,r=e.description,i=f(e,["title","example","exampleSrc","children","description"]),s=this.state,p=s.isExpanded,m={};return s.isBackgroundTransparent&&(m={backgroundColor:"rgba(0, 0, 0, 0)"}),a.default.createElement("div",u({},i,{className:v("template",i.className)}),t&&a.default.createElement("div",{className:v("header")},a.default.createElement("h2",{className:v("title")},t)),a.default.createElement("div",{className:v("content"),style:m},r&&a.default.createElement("div",{className:v("description")},r),l,o),n&&a.default.createElement("div",{className:v("footer")},a.default.createElement("div",{className:v("button-container")},a.default.createElement("button",{type:"button",className:v("bg-toggle"),onClick:this.handleBgToggle},"Toggle Background"),a.default.createElement("button",{type:"button",className:v("code-toggle"),onClick:this.handleCodeToggle},a.default.createElement("span",{className:v("chevron-left")}),a.default.createElement("span",null,"Code"),a.default.createElement("span",{className:v("chevron-right")}))),a.default.createElement("div",{className:v("code",{"is-expanded":p}),"aria-hidden":!p},p?a.default.createElement(d.default,{language:"jsx",style:c.default,customStyle:{margin:"0",borderRadius:"0"}},n):void 0)))}}])&&b(l.prototype,n),o&&b(l,o),t}(a.default.Component);w.propTypes=S,w.defaultProps=x;var _=w;t.default=_},801:function(e,t,l){e.exports={template:"ExampleTemplate-module__template___MEAKz",header:"ExampleTemplate-module__header___13zqD",content:"ExampleTemplate-module__content___1Zdto",description:"ExampleTemplate-module__description___pnaPA",footer:"ExampleTemplate-module__footer___2jmFy","button-container":"ExampleTemplate-module__button-container___2JIjW",code:"ExampleTemplate-module__code___1u1x4","is-expanded":"ExampleTemplate-module__is-expanded___2fXEU","bg-toggle":"ExampleTemplate-module__bg-toggle___1rE0y","code-toggle":"ExampleTemplate-module__code-toggle___1B459","chevron-left":"ExampleTemplate-module__chevron-left___2hjZu","chevron-right":"ExampleTemplate-module__chevron-right___fnHrn",title:"ExampleTemplate-module__title___1qQfE"}},802:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n="#D8DEE9",a="#B2B2B2",o="#c5a5c5",d="#5a9bcf",r="#8dc891",i="#d7deea",s="#FAC863",c={'code[class*="language-"]':{color:"#f8f8f2",background:"none",textShadow:"0 1px rgba(0, 0, 0, 0.3)",fontFamily:'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none"},'pre[class*="language-"]':{color:"#fff",background:"rgb(40, 44, 52)",textShadow:"0 1px rgba(0, 0, 0, 0.3)",fontFamily:'Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace',textAlign:"left",whiteSpace:"pre",wordSpacing:"normal",wordBreak:"normal",wordWrap:"normal",lineHeight:"1.5",MozTabSize:"4",OTabSize:"4",tabSize:"4",WebkitHyphens:"none",MozHyphens:"none",msHyphens:"none",hyphens:"none",padding:"1em",margin:".5em 0",overflow:"auto",borderRadius:"0.3em"},':not(pre) > code[class*="language-"]':{background:"rgb(40, 44, 52)",padding:".1em",borderRadius:".3em",whiteSpace:"normal"},"plain-text":{color:"#ffffff"},"attr-name":{color:o},comment:{color:a},"block-comment":{color:a},prolog:{color:a},doctype:{color:a},cdata:{color:a},property:{color:d},number:{color:d},"function-name":{color:d},constant:{color:d},symbol:{color:d},deleted:{color:d},boolean:{color:"#ff8b50"},tag:{color:"#fc929e"},string:{color:r},punctuation:{color:"#88C6BE"},selector:{color:n},char:{color:n},builtin:{color:n},inserted:{color:n},function:{color:"#79b6f2"},operator:{color:i},entity:{color:i,cursor:"help"},url:{color:i},".language-css .token.string":{color:i},".style .token.string":{color:i},variable:{color:i},"attr-value":{color:r},keyword:{color:o},"at-rule":{color:s},"class-name":{color:s},important:{fontWeight:400},bold:{fontWeight:700},italic:{fontStyle:"italic"},".namespace":{opacity:.7}};t.default=c},803:function(e,t,l){e.exports={"examples-header":"DocTemplate-module__examples-header___P3qFL","doc-template":"DocTemplate-module__doc-template___JSxEJ","doc-card":"DocTemplate-module__doc-card___2jEVe","props-table-markdown":"DocTemplate-module__props-table-markdown___1926W"}},809:function(e,t,l){e.exports={"form-select":"FormSelectDocCommon-module__form-select___3HVkD"}},828:function(e){e.exports=JSON.parse('{"name":"terra-form-select","main":"lib/Select.js","version":"5.35.0","description":"Provides a drop down of selectable options.","repository":{"type":"git","url":"git+https://github.com/cerner/terra-core.git"},"keywords":["Cerner","Terra","terra-form-select","Form","Select","UI"],"author":"Cerner Corporation","license":"Apache-2.0","bugs":{"url":"https://github.com/cerner/terra-core/issues"},"homepage":"https://github.com/cerner/terra-core#readme","peerDependencies":{"react":"^16.8.5","react-dom":"^16.8.5","react-intl":"^2.8.0"},"dependencies":{"classnames":"^2.2.5","keycode-js":"^2.0.1","lodash.uniqueid":"^4.0.1","prop-types":"^15.5.8","react-lifecycles-compat":"^3.0.2","terra-doc-template":"^2.20.0","terra-form-field":"^3.28.0","terra-hookshot":"^5.0.0","terra-mixins":"^1.33.0"},"scripts":{"compile":"babel --root-mode upward src --out-dir lib --copy-files","lint":"npm run lint:js && npm run lint:scss","lint:js":"eslint --ext .js,.jsx . --ignore-path ../../.eslintignore","lint:scss":"stylelint src/**/*.scss","precompile":"rm -rf lib","test":"npm run jest && npm run wdio","jest":"jest --config ../../jestconfig.js","wdio":"cd ../.. && npx wdio ./packages/$npm_package_name/wdio.conf.js"}}')}}]);
//# sourceMappingURL=111-28b23df9b69e48966c51.js.map